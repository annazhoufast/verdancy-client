{"ast":null,"code":"var _jsxFileName = \"/Users/annaqzhou/go/src/plantastic/client/src/Components/Auth/Auth.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport PageTypes from '../../Constants/PageTypes/PageTypes';\nimport SignUp from './Components/SignUp/SignUp';\nimport SignIn from './Components/SignIn/SignIn';\nimport ForgotPassword from './Components/ForgotPassword/ForgotPassword';\n/**\n * @class Auth\n * @description This is an auth object that controls what page\n * is loaded based on sign up or sign in state\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Auth = ({\n  page,\n  setPage,\n  setAuthToken,\n  setUser\n}) => {\n  switch (page) {\n    case PageTypes.signUp:\n      return /*#__PURE__*/_jsxDEV(SignUp, {\n        setPage: setPage,\n        setAuthToken: setAuthToken,\n        setUser: setUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 20\n      }, this);\n\n    case PageTypes.signIn:\n      return /*#__PURE__*/_jsxDEV(SignIn, {\n        setPage: setPage,\n        setAuthToken: setAuthToken,\n        setUser: setUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 20\n      }, this);\n\n    case PageTypes.forgotPassword:\n      return /*#__PURE__*/_jsxDEV(ForgotPassword, {\n        setPage: setPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 20\n      }, this);\n\n    default:\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: \"Error, invalid path reached\"\n      }, void 0, false);\n  }\n};\n\n_c = Auth;\nAuth.propTypes = {\n  page: PropTypes.string.isRequired,\n  setPage: PropTypes.func.isRequired,\n  setAuthToken: PropTypes.func.isRequired,\n  setUser: PropTypes.func.isRequired\n};\nexport default Auth;\n\nvar _c;\n\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"sources":["/Users/annaqzhou/go/src/plantastic/client/src/Components/Auth/Auth.js"],"names":["React","PropTypes","PageTypes","SignUp","SignIn","ForgotPassword","Auth","page","setPage","setAuthToken","setUser","signUp","signIn","forgotPassword","propTypes","string","isRequired","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,SAAP,MAAsB,qCAAtB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,cAAP,MAA2B,4CAA3B;AAEA;AACA;AACA;AACA;AACA;;;;;AACA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,OAAR;AAAiBC,EAAAA,YAAjB;AAA+BC,EAAAA;AAA/B,CAAD,KAA8C;AACvD,UAAQH,IAAR;AACI,SAAKL,SAAS,CAACS,MAAf;AACI,0BAAO,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAEH,OAAjB;AAA0B,QAAA,YAAY,EAAEC,YAAxC;AAAsD,QAAA,OAAO,EAAEC;AAA/D;AAAA;AAAA;AAAA;AAAA,cAAP;;AACJ,SAAKR,SAAS,CAACU,MAAf;AACI,0BAAO,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAEJ,OAAjB;AAA0B,QAAA,YAAY,EAAEC,YAAxC;AAAsD,QAAA,OAAO,EAAEC;AAA/D;AAAA;AAAA;AAAA;AAAA,cAAP;;AACJ,SAAKR,SAAS,CAACW,cAAf;AACI,0BAAO,QAAC,cAAD;AAAgB,QAAA,OAAO,EAAEL;AAAzB;AAAA;AAAA;AAAA;AAAA,cAAP;;AACJ;AACI,0BAAO;AAAA;AAAA,uBAAP;AARR;AAUH,CAXD;;KAAMF,I;AAaNA,IAAI,CAACQ,SAAL,GAAiB;AACbP,EAAAA,IAAI,EAAEN,SAAS,CAACc,MAAV,CAAiBC,UADV;AAEbR,EAAAA,OAAO,EAAEP,SAAS,CAACgB,IAAV,CAAeD,UAFX;AAGbP,EAAAA,YAAY,EAAER,SAAS,CAACgB,IAAV,CAAeD,UAHhB;AAIbN,EAAAA,OAAO,EAAET,SAAS,CAACgB,IAAV,CAAeD;AAJX,CAAjB;AAOA,eAAeV,IAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport PageTypes from '../../Constants/PageTypes/PageTypes';\nimport SignUp from './Components/SignUp/SignUp';\nimport SignIn from './Components/SignIn/SignIn';\nimport ForgotPassword from './Components/ForgotPassword/ForgotPassword';\n\n/**\n * @class Auth\n * @description This is an auth object that controls what page\n * is loaded based on sign up or sign in state\n */\nconst Auth = ({ page, setPage, setAuthToken, setUser }) => {\n    switch (page) {\n        case PageTypes.signUp:\n            return <SignUp setPage={setPage} setAuthToken={setAuthToken} setUser={setUser} />\n        case PageTypes.signIn:\n            return <SignIn setPage={setPage} setAuthToken={setAuthToken} setUser={setUser} />\n        case PageTypes.forgotPassword:\n            return <ForgotPassword setPage={setPage} />;\n        default:\n            return <>Error, invalid path reached</>\n    }\n}\n\nAuth.propTypes = {\n    page: PropTypes.string.isRequired,\n    setPage: PropTypes.func.isRequired,\n    setAuthToken: PropTypes.func.isRequired,\n    setUser: PropTypes.func.isRequired\n}\n\nexport default Auth;"]},"metadata":{},"sourceType":"module"}