{"ast":null,"code":"var _jsxFileName = \"/Users/annaqzhou/INFO/Capstone/verdancy-client/src/Components/Search/ResultGroup.js\";\nimport React, { Component, useState } from 'react';\nimport { Result } from './Result';\nimport { Row, CardDeck } from 'react-bootstrap';\nimport Form from './Form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class ResultGroup extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: this.props.plants,\n      plants: [],\n      isLoaded: false,\n      searchMessage: ''\n    };\n  } // componentDidMount() {\n  //     const response = fetch(\"https://verdancy.capstone.ischool.uw.edu/v1/plants\")\n  //         .then(res => res.json())\n  //         .then((result) => {\n  //             console.log(result);\n  //             this.setState({plants: result, isLoaded: true});\n  //         });\n  // }\n\n\n  render() {\n    // if (!this.state.isLoaded) {\n    //     return (\n    //         <div>Loading...</div>\n    //     )\n    // } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"results\",\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          className: \"db-row\",\n          children: this.state.plants.map(item => /*#__PURE__*/_jsxDEV(Result, {\n            pName: item.PlantName,\n            pSName: item.PlantScientificName,\n            difficulty: item.Difficulty,\n            image: item.ImageLink,\n            id: item.PlantID\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 23\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 19\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }, this); // }\n  }\n\n}","map":{"version":3,"sources":["/Users/annaqzhou/INFO/Capstone/verdancy-client/src/Components/Search/ResultGroup.js"],"names":["React","Component","useState","Result","Row","CardDeck","Form","ResultGroup","constructor","props","state","items","plants","isLoaded","searchMessage","render","map","item","PlantName","PlantScientificName","Difficulty","ImageLink","PlantID"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,MAAR,QAAqB,UAArB;AACA,SAAQC,GAAR,EAAaC,QAAb,QAA4B,iBAA5B;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,OAAO,MAAMC,WAAN,SAA0BP,KAAK,CAACC,SAAhC,CAA0C;AAE7CO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,KAAKF,KAAL,CAAWG,MADT;AAETA,MAAAA,MAAM,EAAE,EAFC;AAGTC,MAAAA,QAAQ,EAAE,KAHD;AAITC,MAAAA,aAAa,EAAE;AAJN,KAAb;AAMH,GAV4C,CAY7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAC,EAAAA,MAAM,GAAG;AAEL;AACA;AACA;AACA;AACA;AACI,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,6BACE;AAAK,QAAA,EAAE,EAAC,SAAR;AAAA,+BACI,QAAC,GAAD;AAAK,UAAA,SAAS,EAAC,QAAf;AAAA,oBAEM,KAAKL,KAAL,CAAWE,MAAX,CAAkBI,GAAlB,CAAsBC,IAAI,iBACtB,QAAC,MAAD;AAAQ,YAAA,KAAK,EAAEA,IAAI,CAACC,SAApB;AAA+B,YAAA,MAAM,EAAED,IAAI,CAACE,mBAA5C;AACI,YAAA,UAAU,EAAEF,IAAI,CAACG,UADrB;AACiC,YAAA,KAAK,EAAEH,IAAI,CAACI,SAD7C;AACwD,YAAA,EAAE,EAAEJ,IAAI,CAACK;AADjE;AAAA;AAAA;AAAA;AAAA,kBADJ;AAFN;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADJ,CAPC,CAqBO;AACf;;AA3C4C","sourcesContent":["import React, {Component, useState} from 'react';\nimport {Result} from './Result';\nimport {Row, CardDeck} from 'react-bootstrap';\nimport Form from './Form';\n\nexport class ResultGroup extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            items: this.props.plants,\n            plants: [],\n            isLoaded: false,\n            searchMessage: ''\n        };\n    }\n\n    // componentDidMount() {\n    //     const response = fetch(\"https://verdancy.capstone.ischool.uw.edu/v1/plants\")\n    //         .then(res => res.json())\n    //         .then((result) => {\n    //             console.log(result);\n    //             this.setState({plants: result, isLoaded: true});\n    //         });\n    // }\n\n    render() {\n\n        // if (!this.state.isLoaded) {\n        //     return (\n        //         <div>Loading...</div>\n        //     )\n        // } else {\n            return (\n                <div className=\"container\">\n                  <div id=\"results\">\n                      <Row className=\"db-row\">\n                          {\n                            this.state.plants.map(item => (\n                                <Result pName={item.PlantName} pSName={item.PlantScientificName}\n                                    difficulty={item.Difficulty} image={item.ImageLink} id={item.PlantID} />\n                            ))\n                          }\n                      </Row>\n                  </div>\n                </div>\n            )\n                    // }\n    }\n}\n"]},"metadata":{},"sourceType":"module"}