{"ast":null,"code":"var _jsxFileName = \"/Users/annaqzhou/INFO/Capstone/verdancy-client/src/Components/Emissions/Breakdown.js\";\nimport React, { Component } from 'react';\nimport * as d3 from 'd3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Breakdown extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: this.props.gardenData\n    };\n  }\n\n  drawChart() {\n    const color = d3.scaleOrdinal().domain(this.state.data.map(d => d.PlantName)).range([\"#F4EBC2\", \"#D8C469\", \"#feffa6\", \"#E89B55\"]);\n    const max_CO2 = d3.max(this.state.data, d => d.TotalCO2);\n    const x_scale = d3.scaleLinear().domain([0, max_CO2]).range([margin.left + 60, width - margin.right]);\n    const y_scale = d3.scaleBand().domain(this.state.data.map(d => d.PlantName)).range([height - margin.bottom, margin.top]).padding(0.1);\n\n    const xAxis = g => g.attr(\"transform\", `translate(0,200)`).call(d3.axisBottom(x_scale));\n\n    const yAxis = g => g.attr(\"transform\", `translate(${margin.left},0)`).call(d3.axisLeft().scale(y_scale));\n\n    const chart = d3.select(\"body\").append(\"svg\").attr(\"width\", width).attr(\"height\", height).style(\"background-color\", \"#679967\");\n  }\n\n  componentDidMount() {\n    this.drawChart();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"green-background\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"centered\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"centered emissions-header\",\n            children: \"Plantastic! Let's take a look at the emissions that were saved by each vegetable...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/annaqzhou/INFO/Capstone/verdancy-client/src/Components/Emissions/Breakdown.js"],"names":["React","Component","d3","Breakdown","constructor","props","state","data","gardenData","drawChart","color","scaleOrdinal","domain","map","d","PlantName","range","max_CO2","max","TotalCO2","x_scale","scaleLinear","margin","left","width","right","y_scale","scaleBand","height","bottom","top","padding","xAxis","g","attr","call","axisBottom","yAxis","axisLeft","scale","chart","select","append","style","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;;AAGA,OAAO,MAAMC,SAAN,SAAwBH,KAAK,CAACC,SAA9B,CAAwC;AAC3CG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE,KAAKF,KAAL,CAAWG;AADR,KAAb;AAGH;;AAEDC,EAAAA,SAAS,GAAG;AACR,UAAMC,KAAK,GAAGR,EAAE,CAACS,YAAH,GACTC,MADS,CACF,KAAKN,KAAL,CAAWC,IAAX,CAAgBM,GAAhB,CAAoBC,CAAC,IAAIA,CAAC,CAACC,SAA3B,CADE,EAETC,KAFS,CAEH,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,CAFG,CAAd;AAKA,UAAMC,OAAO,GAAGf,EAAE,CAACgB,GAAH,CAAO,KAAKZ,KAAL,CAAWC,IAAlB,EAAwBO,CAAC,IAAIA,CAAC,CAACK,QAA/B,CAAhB;AAEA,UAAMC,OAAO,GAAGlB,EAAE,CAACmB,WAAH,GACXT,MADW,CACJ,CAAC,CAAD,EAAIK,OAAJ,CADI,EAEXD,KAFW,CAEL,CAACM,MAAM,CAACC,IAAP,GAAc,EAAf,EAAkBC,KAAK,GAAGF,MAAM,CAACG,KAAjC,CAFK,CAAhB;AAIA,UAAMC,OAAO,GAAGxB,EAAE,CAACyB,SAAH,GACXf,MADW,CACJ,KAAKN,KAAL,CAAWC,IAAX,CAAgBM,GAAhB,CAAoBC,CAAC,IAAIA,CAAC,CAACC,SAA3B,CADI,EAEXC,KAFW,CAEL,CAACY,MAAM,GAAGN,MAAM,CAACO,MAAjB,EAAyBP,MAAM,CAACQ,GAAhC,CAFK,EAGXC,OAHW,CAGH,GAHG,CAAhB;;AAKA,UAAMC,KAAK,GAAGC,CAAC,IAAIA,CAAC,CACfC,IADc,CACT,WADS,EACK,kBADL,EAEdC,IAFc,CAETjC,EAAE,CAACkC,UAAH,CAAchB,OAAd,CAFS,CAAnB;;AAIA,UAAMiB,KAAK,GAAGJ,CAAC,IAAIA,CAAC,CACfC,IADc,CACT,WADS,EACK,aAAYZ,MAAM,CAACC,IAAK,KAD7B,EAEdY,IAFc,CAETjC,EAAE,CAACoC,QAAH,GAAcC,KAAd,CAAoBb,OAApB,CAFS,CAAnB;;AAIA,UAAMc,KAAK,GAAGtC,EAAE,CAACuC,MAAH,CAAU,MAAV,EAAkBC,MAAlB,CAAyB,KAAzB,EACTR,IADS,CACJ,OADI,EACKV,KADL,EAETU,IAFS,CAEJ,QAFI,EAEMN,MAFN,EAGTe,KAHS,CAGH,kBAHG,EAGiB,SAHjB,CAAd;AAQH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,SAAKnC,SAAL;AACH;;AAEDoC,EAAAA,MAAM,GAAG;AACL,wBACE;AAAS,MAAA,SAAS,EAAC,kBAAnB;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,UAAf;AAAA,iCACE;AAAI,YAAA,SAAS,EAAC,2BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AASH;;AAzD0C","sourcesContent":["import React, {Component} from 'react';\nimport * as d3 from 'd3';\n\n\nexport class Breakdown extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: this.props.gardenData\n        }\n    }\n\n    drawChart() {\n        const color = d3.scaleOrdinal()\n            .domain(this.state.data.map(d => d.PlantName))\n            .range([\"#F4EBC2\", \"#D8C469\", \"#feffa6\", \"#E89B55\"]);\n        \n\n        const max_CO2 = d3.max(this.state.data, d => d.TotalCO2);\n\n        const x_scale = d3.scaleLinear()\n            .domain([0, max_CO2])\n            .range([margin.left + 60,width - margin.right]);\n\n        const y_scale = d3.scaleBand()\n            .domain(this.state.data.map(d => d.PlantName))\n            .range([height - margin.bottom, margin.top])\n            .padding(0.1);\n\n        const xAxis = g => g\n            .attr(\"transform\", `translate(0,200)`)\n            .call(d3.axisBottom(x_scale));\n\n        const yAxis = g => g\n            .attr(\"transform\", `translate(${margin.left},0)`)\n            .call(d3.axisLeft().scale(y_scale));\n\n        const chart = d3.select(\"body\").append(\"svg\")\n            .attr(\"width\", width)\n            .attr(\"height\", height)\n            .style(\"background-color\", \"#679967\");\n\n\n\n\n    }\n\n    componentDidMount() {\n        this.drawChart();\n    }\n\n    render() {\n        return (\n          <section className=\"green-background\">\n            <div className=\"container\">\n              <div className=\"centered\">\n                <h3 className=\"centered emissions-header\">Plantastic! Let's take a look at the emissions that were saved by each vegetable...</h3>\n              </div>\n            </div>\n          </section>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}