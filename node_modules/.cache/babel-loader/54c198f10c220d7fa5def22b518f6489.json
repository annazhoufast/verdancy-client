{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amjjl\\\\OneDrive\\\\Documents\\\\College\\\\INFO Capstone\\\\verdancy-client\\\\src\\\\Components\\\\Search\\\\Result.js\";\nimport React, { Component, useState } from 'react';\nimport { Card, Col, Button } from 'react-bootstrap';\nimport { Link, Route } from 'react-router-dom';\nimport { withRouter } from \"react-router\";\nimport { SinglePlant } from '../SinglePlant/SinglePlant';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCheck, faChessKing } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Result extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      plantLink: \"https://verdancy.capstone.ischool.uw.edu/v1/plants/\" + this.props.id,\n      auth: localStorage.getItem(\"Authorization\"),\n      inGarden: false\n    };\n  }\n\n  render() {\n    const addToGarden = e => {\n      e.preventDefault();\n      console.log(this.props.id);\n      const response = fetch(\"https://verdancy.capstone.ischool.uw.edu/v1/AddPlants/\" + this.props.id, {\n        method: \"POST\",\n        headers: new Headers({\n          \"Authorization\": this.state.auth\n        })\n      });\n\n      if (response.status > 201) {\n        const error = response.text();\n        console.log(error);\n        return;\n      }\n\n      this.setState({\n        inGarden: true\n      });\n      console.log(response);\n    };\n\n    const specificLink = \"https://verdancy.capstone.ischool.uw.edu/v1/plants/\" + this.props.id;\n    const linkToPlant = \"/plant/\" + this.props.id;\n    const {\n      history\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(Col, {\n      md: 4,\n      xs: 12,\n      className: \"db-plant\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: linkToPlant,\n            children: /*#__PURE__*/_jsxDEV(Card.Img, {\n              variant: \"top\",\n              src: this.props.image,\n              className: \"full-img\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this), this.state.inGarden ? /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"success\",\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faCheck\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 48\n          }, this) : /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outline-success\",\n            onClick: addToGarden,\n            children: \"+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 27\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              id: \"link plant-title\",\n              to: linkToPlant,\n              children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: this.props.pName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              children: this.props.pSName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 29\n            }, this), \"Difficulty: \", this.props.difficulty]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/amjjl/OneDrive/Documents/College/INFO Capstone/verdancy-client/src/Components/Search/Result.js"],"names":["React","Component","useState","Card","Col","Button","Link","Route","withRouter","SinglePlant","FontAwesomeIcon","faCheck","faChessKing","Result","constructor","props","state","plantLink","id","auth","localStorage","getItem","inGarden","render","addToGarden","e","preventDefault","console","log","response","fetch","method","headers","Headers","status","error","text","setState","specificLink","linkToPlant","history","image","pName","pSName","difficulty"],"mappings":"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","sourcesContent":["import React, {Component, useState} from 'react';\r\nimport {Card, Col, Button} from 'react-bootstrap';\r\nimport {Link, Route} from 'react-router-dom';\r\nimport { withRouter } from \"react-router\";\r\nimport {SinglePlant} from '../SinglePlant/SinglePlant';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faCheck, faChessKing } from '@fortawesome/free-solid-svg-icons'\r\n\r\nexport class Result extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            plantLink: \"https://verdancy.capstone.ischool.uw.edu/v1/plants/\" + this.props.id,\r\n            auth: localStorage.getItem(\"Authorization\"),\r\n            inGarden: false\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const addToGarden = (e) => {\r\n            e.preventDefault();\r\n            console.log(this.props.id);\r\n            const response = fetch(\"https://verdancy.capstone.ischool.uw.edu/v1/AddPlants/\" + this.props.id, {\r\n                method: \"POST\",\r\n                headers: new Headers({\r\n                    \"Authorization\": this.state.auth\r\n                })\r\n            });\r\n            if (response.status > 201) {\r\n                const error = response.text();\r\n                console.log(error);\r\n                return;\r\n            }\r\n            this.setState({inGarden: true});\r\n            console.log(response);\r\n        }\r\n\r\n        const specificLink = \"https://verdancy.capstone.ischool.uw.edu/v1/plants/\" + this.props.id;\r\n        const linkToPlant = \"/plant/\" + this.props.id;\r\n        const {history} = this.props;\r\n        return (\r\n            <Col md={4} xs={12} className=\"db-plant\">\r\n                <Card className=\"card\">\r\n                    <div>\r\n                        <Link to={linkToPlant}>\r\n                            <Card.Img variant=\"top\" src={this.props.image} className=\"full-img\" />\r\n                        </Link>\r\n                        {/* COME BACK AND DEAL W/ THIS */}\r\n                        {this.state.inGarden ? <Button variant=\"success\">\r\n                            <FontAwesomeIcon icon={faCheck} />\r\n                        </Button>\r\n                        : <Button variant=\"outline-success\" onClick={addToGarden}>+</Button>}\r\n\r\n                    </div>\r\n                    <Card.Body>\r\n                        <Card.Title>\r\n                            <Link id=\"link plant-title\" to={linkToPlant}>\r\n                                <h3>{this.props.pName}</h3>\r\n                            </Link>\r\n                        </Card.Title>\r\n                        <Card.Text>\r\n                            <i>{this.props.pSName}</i>\r\n                            <br/>\r\n                            Difficulty: {this.props.difficulty}\r\n                        </Card.Text>\r\n                    </Card.Body>\r\n                </Card>\r\n            </Col>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}