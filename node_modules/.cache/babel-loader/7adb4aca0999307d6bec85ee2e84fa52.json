{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amjjl\\\\OneDrive\\\\Documents\\\\College\\\\INFO Capstone\\\\verdancy-client\\\\src\\\\Components\\\\Search\\\\ResultGroup.js\";\nimport React, { Component, useState } from 'react';\nimport { Result } from './Result';\nimport { Row, CardDeck } from 'react-bootstrap';\nimport Form from './Form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class ResultGroup extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: this.props.plants,\n      plants: [],\n      isLoaded: false\n    };\n  }\n\n  componentDidMount() {\n    const response = fetch(\"https://verdancy.capstone.ischool.uw.edu/v1/plants\").then(res => res.json()).then(result => {\n      console.log(result);\n      this.setState({\n        plants: result,\n        isLoaded: true\n      }); // result.map(cur => (\n      //     this.state.singlePlants.push(\n      //         // <Route exact path={`/plant/${cur.PlantID}`}>\n      //         //     <SinglePlant id={cur.PlantID}/>\n      //         // </Route>\n      //     )\n      // ));\n    });\n  }\n\n  render() {\n    if (!this.state.isLoaded) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          className: \"db-row\",\n          children: this.state.plants.map(item => /*#__PURE__*/_jsxDEV(Result, {\n            pName: item.PlantName,\n            pSName: item.PlantScientificName,\n            difficulty: item.Difficulty,\n            image: item.ImageLink,\n            id: item.PlantID\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this);\n    }\n  }\n\n}","map":{"version":3,"sources":["C:/Users/amjjl/OneDrive/Documents/College/INFO Capstone/verdancy-client/src/Components/Search/ResultGroup.js"],"names":["React","Component","useState","Result","Row","CardDeck","Form","ResultGroup","constructor","props","state","items","plants","isLoaded","componentDidMount","response","fetch","then","res","json","result","console","log","setState","render","map","item","PlantName","PlantScientificName","Difficulty","ImageLink","PlantID"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,MAAR,QAAqB,UAArB;AACA,SAAQC,GAAR,EAAaC,QAAb,QAA4B,iBAA5B;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,OAAO,MAAMC,WAAN,SAA0BP,KAAK,CAACC,SAAhC,CAA0C;AAE7CO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,KAAKF,KAAL,CAAWG,MADT;AAETA,MAAAA,MAAM,EAAE,EAFC;AAGTC,MAAAA,QAAQ,EAAE;AAHD,KAAb;AAKH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,UAAMC,QAAQ,GAAGC,KAAK,CAAC,oDAAD,CAAL,CACZC,IADY,CACPC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADA,EAEZF,IAFY,CAENG,MAAD,IAAY;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACA,WAAKG,QAAL,CAAc;AAACX,QAAAA,MAAM,EAAEQ,MAAT;AAAiBP,QAAAA,QAAQ,EAAE;AAA3B,OAAd,EAFc,CAGd;AACA;AACA;AACA;AACA;AACA;AACA;AACH,KAZY,CAAjB;AAaH;;AAEDW,EAAAA,MAAM,GAAG;AAEL,QAAI,CAAC,KAAKd,KAAL,CAAWG,QAAhB,EAA0B;AACtB,0BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAGH,KAJD,MAIO;AACH,0BACA;AAAA,+BACI,QAAC,GAAD;AAAK,UAAA,SAAS,EAAC,QAAf;AAAA,oBACK,KAAKH,KAAL,CAAWE,MAAX,CAAkBa,GAAlB,CAAsBC,IAAI,iBACvB,QAAC,MAAD;AAAQ,YAAA,KAAK,EAAEA,IAAI,CAACC,SAApB;AAA+B,YAAA,MAAM,EAAED,IAAI,CAACE,mBAA5C;AACI,YAAA,UAAU,EAAEF,IAAI,CAACG,UADrB;AACiC,YAAA,KAAK,EAAEH,IAAI,CAACI,SAD7C;AACwD,YAAA,EAAE,EAAEJ,IAAI,CAACK;AADjE;AAAA;AAAA;AAAA;AAAA,kBADH;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADA;AAUS;AAChB;;AA7C4C","sourcesContent":["import React, {Component, useState} from 'react';\r\nimport {Result} from './Result';\r\nimport {Row, CardDeck} from 'react-bootstrap';\r\nimport Form from './Form';\r\n\r\nexport class ResultGroup extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            items: this.props.plants,\r\n            plants: [],\r\n            isLoaded: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const response = fetch(\"https://verdancy.capstone.ischool.uw.edu/v1/plants\")\r\n            .then(res => res.json())\r\n            .then((result) => {\r\n                console.log(result);\r\n                this.setState({plants: result, isLoaded: true});\r\n                // result.map(cur => (\r\n                //     this.state.singlePlants.push(\r\n                //         // <Route exact path={`/plant/${cur.PlantID}`}>\r\n                //         //     <SinglePlant id={cur.PlantID}/>\r\n                //         // </Route>\r\n                //     )\r\n                // ));\r\n            });\r\n    }\r\n\r\n    render() {\r\n\r\n        if (!this.state.isLoaded) {\r\n            return (\r\n                <div>Loading...</div>\r\n            )\r\n        } else {\r\n            return (\r\n            <div>\r\n                <Row className=\"db-row\">\r\n                    {this.state.plants.map(item => (\r\n                        <Result pName={item.PlantName} pSName={item.PlantScientificName}\r\n                            difficulty={item.Difficulty} image={item.ImageLink} id={item.PlantID} />\r\n                    ))}\r\n                </Row>\r\n            </div>\r\n            )\r\n                    }\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}