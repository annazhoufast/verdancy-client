{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amjjl\\\\OneDrive\\\\Documents\\\\College\\\\INFO Capstone\\\\verdancy-client\\\\src\\\\Components\\\\Auth\\\\Components\\\\SignIn\\\\SignIn.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport SignForm from '../SignForm/SignForm';\nimport api from '../../../../Constants/APIEndpoints/APIEndpoints';\nimport Errors from '../../../Errors/Errors';\nimport PageTypes from '../../../../Constants/PageTypes/PageTypes';\nimport { Container, Row, Col } from 'react-bootstrap';\n/**\r\n * @class\r\n * @classdesc SignIn handles the sign in component\r\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass SignIn extends Component {\n  constructor(props) {\n    super(props);\n\n    this.setField = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.setError = error => {\n      this.setState({\n        error\n      });\n    };\n\n    this.submitForm = async e => {\n      e.preventDefault();\n      const {\n        email,\n        password\n      } = this.state;\n      const sendData = {\n        email,\n        password\n      };\n      const response = await fetch(api.base + api.handlers.sessions, {\n        method: \"POST\",\n        body: JSON.stringify(sendData),\n        headers: new Headers({\n          \"Content-Type\": \"application/json\"\n        })\n      });\n\n      if (response.status >= 300) {\n        const error = await response.text();\n        this.setError(error);\n        return;\n      }\n\n      const authToken = response.headers.get(\"Authorization\");\n      localStorage.setItem(\"Authorization\", authToken);\n      this.setError(\"\");\n      this.props.setAuthToken(authToken);\n      const user = await response.json();\n      this.props.setUser(user);\n    };\n\n    this.state = {\n      email: \"\",\n      password: \"\",\n      error: \"\"\n    };\n    this.fields = [{\n      name: \"Email\",\n      key: \"email\"\n    }, {\n      name: \"Password\",\n      key: \"password\"\n    }];\n  }\n  /**\r\n   * @description setField will set the field for the provided argument\r\n   */\n\n\n  render() {\n    const values = this.state;\n    const {\n      error\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Errors, {\n        error: error,\n        setError: this.setError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"left-half white-background\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"sign in\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(SignForm, {\n            setField: this.setField,\n            submitForm: this.submitForm,\n            values: values,\n            fields: this.fields\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"right-half\",\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          id: \"welcome\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"centered-text white-text\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"welcome to\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 31\n            }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: /*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"verdancy\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 35\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 31\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"get ready to go green with us!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 31\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 27\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nSignIn.propTypes = {\n  setPage: PropTypes.func,\n  setAuthToken: PropTypes.func\n};\nexport default SignIn;","map":{"version":3,"sources":["C:/Users/amjjl/OneDrive/Documents/College/INFO Capstone/verdancy-client/src/Components/Auth/Components/SignIn/SignIn.js"],"names":["React","Component","PropTypes","SignForm","api","Errors","PageTypes","Container","Row","Col","SignIn","constructor","props","setField","e","setState","target","name","value","setError","error","submitForm","preventDefault","email","password","state","sendData","response","fetch","base","handlers","sessions","method","body","JSON","stringify","headers","Headers","status","text","authToken","get","localStorage","setItem","setAuthToken","user","json","setUser","fields","key","render","values","propTypes","setPage","func"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport SignForm from '../SignForm/SignForm';\r\nimport api from '../../../../Constants/APIEndpoints/APIEndpoints';\r\nimport Errors from '../../../Errors/Errors';\r\nimport PageTypes from '../../../../Constants/PageTypes/PageTypes';\r\nimport {Container, Row, Col} from 'react-bootstrap';\r\n/**\r\n * @class\r\n * @classdesc SignIn handles the sign in component\r\n */\r\nclass SignIn extends Component {\r\n    static propTypes = {\r\n        setPage: PropTypes.func,\r\n        setAuthToken: PropTypes.func\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            email: \"\",\r\n            password: \"\",\r\n            error: \"\"\r\n        };\r\n\r\n        this.fields = [\r\n            {\r\n                name: \"Email\",\r\n                key: \"email\"\r\n            },\r\n            {\r\n                name: \"Password\",\r\n                key: \"password\"\r\n            }];\r\n    }\r\n\r\n    /**\r\n     * @description setField will set the field for the provided argument\r\n     */\r\n    setField = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n\r\n    /**\r\n     * @description setError sets the error message\r\n     */\r\n    setError = (error) => {\r\n        this.setState({ error })\r\n    }\r\n\r\n    /**\r\n     * @description submitForm handles the form submission\r\n     */\r\n    submitForm = async (e) => {\r\n        e.preventDefault();\r\n        const { email, password } = this.state;\r\n        const sendData = { email, password };\r\n        const response = await fetch(api.base + api.handlers.sessions, {\r\n            method: \"POST\",\r\n            body: JSON.stringify(sendData),\r\n            headers: new Headers({\r\n                \"Content-Type\": \"application/json\"\r\n            })\r\n        });\r\n        if (response.status >= 300) {\r\n            const error = await response.text();\r\n            this.setError(error);\r\n            return;\r\n        }\r\n        const authToken = response.headers.get(\"Authorization\")\r\n        localStorage.setItem(\"Authorization\", authToken);\r\n        this.setError(\"\");\r\n        this.props.setAuthToken(authToken);\r\n        const user = await response.json();\r\n        this.props.setUser(user);\r\n    }\r\n\r\n    render() {\r\n        const values = this.state;\r\n        const { error } = this.state;\r\n        return <>\r\n            <Errors error={error} setError={this.setError} />\r\n\r\n\r\n            <section className=\"left-half white-background\">\r\n                <div className=\"container\">\r\n                  <h2>sign in</h2>\r\n                  <SignForm\r\n                        setField={this.setField}\r\n                        submitForm={this.submitForm}\r\n                        values={values}\r\n                        fields={this.fields} />\r\n                </div>\r\n            </section>\r\n            <div className=\"right-half\">\r\n                  <Container id=\"welcome\">\r\n                          <div className=\"centered-text white-text\">\r\n                              <h3>welcome to</h3>\r\n                              <h1><b>verdancy</b></h1>\r\n                              <h3>get ready to go green with us!</h3>\r\n                          </div>\r\n                  </Container>\r\n            </div>\r\n            {/* <button onClick={(e) => this.props.setPage(e, PageTypes.signUp)}>Sign up instead</button>\r\n            <button onClick={(e) => this.props.setPage(e, PageTypes.forgotPassword)}>Forgot password</button> */}\r\n        </>\r\n    }\r\n}\r\n\r\nexport default SignIn;\r\n"]},"metadata":{},"sourceType":"module"}