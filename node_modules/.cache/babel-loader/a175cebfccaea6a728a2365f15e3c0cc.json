{"ast":null,"code":"var _jsxFileName = \"/Users/annaqzhou/INFO/Capstone/verdancy-client/src/Components/Emissions/Breakdown.js\";\nimport React, { Component, useState } from 'react';\nimport * as d3 from 'd3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Breakdown extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: []\n    };\n  }\n\n  drawChart(data) {\n    // const data = this.state.data;\n    console.log(data);\n    const margin = {\n      top: 20,\n      right: 60,\n      bottom: 40,\n      left: 40\n    };\n    const height = 700;\n    const width = window.innerWidth - 400;\n    const color = d3.scaleOrdinal().domain(data.map(d => d.PlantName)).range([\"#F4EBC2\", \"#D8C469\", \"#feffa6\", \"#E89B55\"]);\n    const max_CO2 = d3.max(data, d => d.TotalCO2);\n    const x_scale = d3.scaleLinear().domain([0, max_CO2]).range([margin.left + 60, width - margin.right]);\n    const y_scale = d3.scaleBand().domain(data.map(d => d.PlantName)).range([height - margin.bottom, margin.top]).padding(0.1);\n\n    const xAxis = g => g.attr(\"transform\", `translate(0, 0)`).call(d3.axisBottom(x_scale));\n\n    const yAxis = g => g.attr(\"transform\", `translate(${margin.left},0)`).call(d3.axisLeft().scale(y_scale)); // const chart = d3.select(\"body\")\n\n\n    const chart = d3.select(\"#my-svg\").append(\"svg\").attr(\"width\", width).attr(\"height\", height).style(\"background-color\", \"#679967\");\n    chart.append('g').call(xAxis).attr(\"transform\", `translate(0, ${height - 25})`).style(\"color\", \"white\");\n    chart.append('g').call(yAxis).attr(\"transform\", \"translate(100,0)\").style(\"color\", \"white\");\n    chart.append(\"g\").selectAll(\"rect\").data(data).join(\"rect\").attr(\"fill\", d => color(d.PlantName)).attr(\"x\", x_scale(0)).attr(\"y\", d => y_scale(d.PlantName) + 15).attr(\"width\", d => x_scale(d.TotalCO2) - x_scale(0)).attr(\"height\", 25); // y_scale.bandwidth()\n\n    chart.selectAll(\"labels\").data(data).enter().append(\"text\").attr(\"x\", d => x_scale(d.TotalCO2) + 5).attr(\"y\", d => y_scale(d.PlantName) + 26).text(d => d.TotalCO2).style(\"fill\", \"white\").style(\"font\", \"12pt Sans-serif\");\n    const an = chart.append(\"text\").attr(\"transform\", `translate(${width / 2}, 30)`).text(\"\").style(\"text-anchor\", \"middle\").style(\"font\", \"20pt Sans-serif\").style(\"fill\", \"white\");\n    an.text(`g of CO2 Emissions`); // console.log(chart[0]);\n    // return chart;\n  }\n\n  componentDidMount() {\n    // console.log(this.state.data);\n    console.log(window.innerWidth);\n    fetch(\"https://verdancy.capstone.ischool.uw.edu/v1/UserPlants/\", {\n      method: \"GET\",\n      headers: new Headers({\n        \"Authorization\": localStorage.getItem(\"Authorization\")\n      })\n    }).then(res => res.json()).then(result => {\n      this.drawChart(result);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"green-background\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"centered\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"centered emissions-header\",\n            children: \"Plantastic! Let's take a look at the emissions that were saved by each vegetable...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n          id: \"my-svg\",\n          width: window.innerWidth,\n          height: 800\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/annaqzhou/INFO/Capstone/verdancy-client/src/Components/Emissions/Breakdown.js"],"names":["React","Component","useState","d3","Breakdown","constructor","props","state","data","drawChart","console","log","margin","top","right","bottom","left","height","width","window","innerWidth","color","scaleOrdinal","domain","map","d","PlantName","range","max_CO2","max","TotalCO2","x_scale","scaleLinear","y_scale","scaleBand","padding","xAxis","g","attr","call","axisBottom","yAxis","axisLeft","scale","chart","select","append","style","selectAll","join","enter","text","an","componentDidMount","fetch","method","headers","Headers","localStorage","getItem","then","res","json","result","render"],"mappings":"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","sourcesContent":["import React, {Component, useState} from 'react';\nimport * as d3 from 'd3';\n\n\nexport class Breakdown extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state ={\n            data: []\n        }\n    }\n\n    drawChart(data) {\n        // const data = this.state.data;\n        console.log(data);\n        const margin = ({ top: 20, right: 60, bottom: 40, left: 40 });\n\n        const height = 700;\n\n        const width = window.innerWidth - 400;\n\n        const color = d3.scaleOrdinal()\n            .domain(data.map(d => d.PlantName))\n            .range([\"#F4EBC2\", \"#D8C469\", \"#feffa6\", \"#E89B55\"]);\n        \n\n        const max_CO2 = d3.max(data, d => d.TotalCO2);\n\n        const x_scale = d3.scaleLinear()\n            .domain([0, max_CO2])\n            .range([margin.left + 60, width - margin.right]);\n\n        const y_scale = d3.scaleBand()\n            .domain(data.map(d => d.PlantName))\n            .range([height - margin.bottom, margin.top])\n            .padding(0.1);\n\n        const xAxis = g => g\n            .attr(\"transform\", `translate(0, 0)`)\n            .call(d3.axisBottom(x_scale));\n\n        const yAxis = g => g\n            .attr(\"transform\", `translate(${margin.left},0)`)\n            .call(d3.axisLeft().scale(y_scale));\n\n        // const chart = d3.select(\"body\")\n        const chart = d3.select(\"#my-svg\")\n            .append(\"svg\")\n            .attr(\"width\", width)\n            .attr(\"height\", height)\n            .style(\"background-color\", \"#679967\");\n\n        chart.append('g')\n            .call(xAxis)\n            .attr(\"transform\", `translate(0, ${height-25})`)\n            .style(\"color\", \"white\");\n\n        chart.append('g')\n            .call(yAxis)\n            .attr(\"transform\", \"translate(100,0)\")\n            .style(\"color\", \"white\");\n\n        chart.append(\"g\")\n            .selectAll(\"rect\")\n            .data(data)\n            .join(\"rect\")\n                .attr(\"fill\", (d) => color(d.PlantName))\n                .attr(\"x\", x_scale(0))\n                .attr(\"y\", d => y_scale(d.PlantName) + 15)\n                .attr(\"width\", d => x_scale(d.TotalCO2) - x_scale(0))\n                .attr(\"height\", 25); // y_scale.bandwidth()\n\n        chart.selectAll(\"labels\")\n            .data(data)\n            .enter()\n            .append(\"text\")\n              .attr(\"x\", (d) => x_scale(d.TotalCO2) + 5)\n              .attr(\"y\", d => y_scale(d.PlantName) + 26)\n              .text(d => d.TotalCO2)\n              .style(\"fill\", \"white\")\n            .style(\"font\", \"12pt Sans-serif\");\n\n        const an = chart.append(\"text\")\n        .attr(\"transform\", `translate(${width / 2}, 30)`)\n        .text(\"\")\n        .style(\"text-anchor\", \"middle\")\n        .style(\"font\", \"20pt Sans-serif\")\n        .style(\"fill\", \"white\");\n          \n          an.text(`g of CO2 Emissions`);\n\n        // console.log(chart[0]);\n        // return chart;\n    }\n\n    componentDidMount() {\n        // console.log(this.state.data);\n\n        console.log(window.innerWidth);\n        fetch(\"https://verdancy.capstone.ischool.uw.edu/v1/UserPlants/\", {\n            method: \"GET\",\n            headers: new Headers({\n                \"Authorization\": localStorage.getItem(\"Authorization\")\n            })\n        })\n            .then(res => res.json())\n            .then((result) => {\n                this.drawChart(result);\n            });\n    }\n\n    render() {\n        return (\n          <section className=\"green-background\">\n            <div className=\"container\">\n              <div className=\"centered\">\n                <h3 className=\"centered emissions-header\">Plantastic! Let's take a look at the emissions that were saved by each vegetable...</h3>\n              </div>\n                <svg id=\"my-svg\" width={window.innerWidth} height={800}></svg>\n            </div>\n          </section>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}