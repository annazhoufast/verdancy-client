{"ast":null,"code":"var _jsxFileName = \"/Users/annaqzhou/go/src/plantastic/client/src/Components/Garden/PlantGroup.js\";\nimport React, { Component, useState } from 'react';\nimport Plant from \"./Plant\";\nimport { Row } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class PlantGroup extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      // items: [],\n      items: this.props.plants,\n      stuff: this.props.stuff,\n      auth: localStorage.getItem(\"Authorization\")\n    };\n  }\n\n  componentDidMount() {// fetch(\"https://verdancy.capstone.ischool.uw.edu/v1/UserPlants/\", {\n    //     method: 'GET',\n    //     headers: new Headers({\n    //         'Authorization': this.state.auth\n    //     })\n    // })\n    //     .then(res => res.json())\n    //     .then(\n    //         (result) => {\n    //             this.setState({\n    //                 isLoaded: true,\n    //                 items: result\n    //             });\n    //         },\n    //         (error) => {\n    //             this.setState({\n    //                 isLoaded: true,\n    //                 error\n    //             });\n    //         }\n    //     )\n  }\n\n  render() {\n    // const {error, isLoaded, items} = this.state;\n    // console.log(this.props.plants);\n    console.log(this.state.stuff); // console.log(this.state.auth)\n\n    let plants = [];\n\n    for (let i = 0; i < this.state.stuff.length; i++) {\n      plants.push( /*#__PURE__*/_jsxDEV(Plant, {\n        img: this.state.stuff[i].ImageLink,\n        pName: this.state.stuff[i].PlantName,\n        quantity: this.state.stuff[i].Total,\n        totCarbon: this.state.stuff[i].TotalCO2,\n        pID: this.state.stuff[i].PlantID\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 25\n      }, this)); // plants.push(<Plant img={this.state.items[i].ImageLink}\n      //                 pName={this.state.items[i].PlantName}\n      //                 quantity={this.state.items[i].Total}\n      //                 totCarbon={this.state.items[i].TotalCO2}\n      //                 pID={this.state.items[i].PlantID} />);\n    }\n\n    if (this.state.error) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Error: \", this.state.error.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 20\n      }, this);\n    } else if (!this.state.isLoaded) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 20\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: plants\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this);\n    } // return (\n    //     <div>\n    //         <Row>\n    //             {plants}\n    //         </Row>\n    //     </div>\n    // )\n\n  }\n\n}","map":{"version":3,"sources":["/Users/annaqzhou/go/src/plantastic/client/src/Components/Garden/PlantGroup.js"],"names":["React","Component","useState","Plant","Row","PlantGroup","constructor","props","state","error","isLoaded","items","plants","stuff","auth","localStorage","getItem","componentDidMount","render","console","log","i","length","push","ImageLink","PlantName","Total","TotalCO2","PlantID","message"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAAQC,GAAR,QAAkB,iBAAlB;;AAEA,OAAO,MAAMC,UAAN,SAAyBL,KAAK,CAACC,SAA/B,CAAyC;AAC5CK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,IADE;AAETC,MAAAA,QAAQ,EAAE,KAFD;AAGT;AACAC,MAAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWK,MAJT;AAKTC,MAAAA,KAAK,EAAE,KAAKN,KAAL,CAAWM,KALT;AAMTC,MAAAA,IAAI,EAAEC,YAAY,CAACC,OAAb,CAAqB,eAArB;AANG,KAAb;AAQH;;AAEDC,EAAAA,iBAAiB,GAAG,CAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACL;AACA;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKZ,KAAL,CAAWK,KAAvB,EAHK,CAIL;;AACA,QAAID,MAAM,GAAG,EAAb;;AAEA,SAAK,IAAIS,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKb,KAAL,CAAWK,KAAX,CAAiBS,MAArC,EAA6CD,CAAC,EAA9C,EAAkD;AAC9CT,MAAAA,MAAM,CAACW,IAAP,eAAY,QAAC,KAAD;AAAO,QAAA,GAAG,EAAE,KAAKf,KAAL,CAAWK,KAAX,CAAiBQ,CAAjB,EAAoBG,SAAhC;AACQ,QAAA,KAAK,EAAE,KAAKhB,KAAL,CAAWK,KAAX,CAAiBQ,CAAjB,EAAoBI,SADnC;AAEQ,QAAA,QAAQ,EAAE,KAAKjB,KAAL,CAAWK,KAAX,CAAiBQ,CAAjB,EAAoBK,KAFtC;AAGQ,QAAA,SAAS,EAAE,KAAKlB,KAAL,CAAWK,KAAX,CAAiBQ,CAAjB,EAAoBM,QAHvC;AAIQ,QAAA,GAAG,EAAE,KAAKnB,KAAL,CAAWK,KAAX,CAAiBQ,CAAjB,EAAoBO;AAJjC;AAAA;AAAA;AAAA;AAAA,cAAZ,EAD8C,CAM9C;AACA;AACA;AACA;AACA;AACH;;AACD,QAAI,KAAKpB,KAAL,CAAWC,KAAf,EAAsB;AAClB,0BAAO;AAAA,8BAAa,KAAKD,KAAL,CAAWC,KAAX,CAAiBoB,OAA9B;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAFD,MAEO,IAAI,CAAC,KAAKrB,KAAL,CAAWE,QAAhB,EAA0B;AAC7B,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAFM,MAEA;AACH,0BACI;AAAA,+BACI,QAAC,GAAD;AAAA,oBACKE;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ;AAOH,KA/BI,CAgCL;AACA;AACA;AACA;AACA;AACA;AACA;;AACH;;AA5E2C","sourcesContent":["import React, {Component, useState} from 'react';\nimport Plant from \"./Plant\";\nimport {Row} from 'react-bootstrap';\n\nexport class PlantGroup extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            error: null,\n            isLoaded: false,\n            // items: [],\n            items: this.props.plants,\n            stuff: this.props.stuff,\n            auth: localStorage.getItem(\"Authorization\")\n        }\n    }\n\n    componentDidMount() {\n        // fetch(\"https://verdancy.capstone.ischool.uw.edu/v1/UserPlants/\", {\n        //     method: 'GET',\n        //     headers: new Headers({\n        //         'Authorization': this.state.auth\n        //     })\n        // })\n        //     .then(res => res.json())\n        //     .then(\n        //         (result) => {\n        //             this.setState({\n        //                 isLoaded: true,\n        //                 items: result\n        //             });\n        //         },\n        //         (error) => {\n        //             this.setState({\n        //                 isLoaded: true,\n        //                 error\n        //             });\n        //         }\n        //     )\n    }\n\n    render() {\n        // const {error, isLoaded, items} = this.state;\n        // console.log(this.props.plants);\n        console.log(this.state.stuff)\n        // console.log(this.state.auth)\n        let plants = [];\n        \n        for (let i = 0; i < this.state.stuff.length; i++) {\n            plants.push(<Plant img={this.state.stuff[i].ImageLink}\n                                pName={this.state.stuff[i].PlantName}\n                                quantity={this.state.stuff[i].Total}\n                                totCarbon={this.state.stuff[i].TotalCO2}\n                                pID={this.state.stuff[i].PlantID} />);\n            // plants.push(<Plant img={this.state.items[i].ImageLink}\n            //                 pName={this.state.items[i].PlantName}\n            //                 quantity={this.state.items[i].Total}\n            //                 totCarbon={this.state.items[i].TotalCO2}\n            //                 pID={this.state.items[i].PlantID} />);\n        }\n        if (this.state.error) {\n            return <div>Error: {this.state.error.message}</div>\n        } else if (!this.state.isLoaded) {\n            return <div>Loading...</div>\n        } else {\n            return (\n                <div>\n                    <Row>\n                        {plants}\n                    </Row>\n                </div>\n            )\n        }\n        // return (\n        //     <div>\n        //         <Row>\n        //             {plants}\n        //         </Row>\n        //     </div>\n        // )\n    }\n}"]},"metadata":{},"sourceType":"module"}