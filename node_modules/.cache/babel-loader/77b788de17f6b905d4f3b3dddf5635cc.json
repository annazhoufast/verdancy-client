{"ast":null,"code":"var _jsxFileName = \"/Users/annaqzhou/INFO/Capstone/verdancy-client/src/Components/Garden/Plant.js\";\nimport React, { Component, useState } from 'react';\nimport { Card, Button, Row, Col, Modal, Form, Container } from 'react-bootstrap';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport NumericInput from 'react-numeric-input';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'; // export class Plant extends React.Component {\n// function updateQuant(quant) {\n//     this.setState({quant});\n// }\n// function Plant(props) {\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Plant extends Component {\n  constructor(props) {\n    super(props);\n\n    this.updateQ = quant => this.setState({\n      quant: quant\n    });\n\n    this.deletePlant = async e => {\n      const response = await fetch(\"https://verdancy.capstone.ischool.uw.edu/v1/UserPlants/\" + this.props.pID, {\n        method: \"DELETE\",\n        headers: new Headers({\n          \"Authorization\": this.state.auth\n        })\n      });\n\n      if (response.state > 201) {\n        console.log(response.text());\n        return;\n      }\n\n      this.setState({\n        inGarden: false\n      });\n    };\n\n    this.updatePlantQuantity = async e => {\n      e.preventDefault();\n      console.log(\"hello\"); // this.setState({lgShow: false});\n\n      const {\n        quant\n      } = this.state;\n      console.log(quant); // const auth = localStorage.getItem(\"Authorization\");\n\n      const sendData = {\n        Quantity: quant\n      };\n      console.log(this.props.authHeader);\n      console.log(this.props.pID);\n      const response = await fetch(\"https://verdancy.capstone.ischool.uw.edu/v1/UserPlants/\" + this.props.pID, {\n        method: \"POST\",\n        body: JSON.stringify(sendData),\n        headers: new Headers({\n          \"Authorization\": this.state.auth,\n          \"Content-Type\": \"application/json\"\n        })\n      });\n\n      if (response.status > 201) {\n        const error = response.text(); // this.setState({error:}));\n\n        console.log(error);\n        return;\n      }\n\n      let newTotal = this.state.total + quant;\n      let newCarbon = this.state.co2 * newTotal;\n      this.setState({\n        lgShow: false,\n        total: newTotal,\n        totalCO2: newCarbon\n      }); // window.location.reload(true);\n\n      const respMessage = await response.body;\n      console.log(quant);\n      console.log(response);\n    };\n\n    this.state = {\n      lgShow: false,\n      quant: 0,\n      auth: localStorage.getItem(\"Authorization\"),\n      total: this.props.quantity,\n      co2: this.props.co2,\n      totalCO2: this.props.totCarbon,\n      inGarden: true\n    };\n  }\n\n  componentDidUpdate() {// this.updatePlantQuantity()\n  }\n\n  render() {\n    console.log(this.state.quant);\n    return /*#__PURE__*/_jsxDEV(Col, {\n      lg: 6,\n      className: \"harvest-card\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        className: \"outline\",\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            lg: 5,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"https://raw.githubusercontent.com/annazhoufast/plantastic/main/data/imgs/tomatoe.png?token=ALLXA23MPOVXSKYWA7DGQXTAULINM\",\n              alt: \"drawing of plant\",\n              className: \"garden-img\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            lg: 7,\n            className: \"harvest\",\n            children: [/*#__PURE__*/_jsxDEV(Row, {\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: /*#__PURE__*/_jsxDEV(\"b\", {\n                    children: this.props.pName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 103,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 102,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                  icon: faTimes\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Harvest Total\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: this.state.total\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Carbon Emissions Saved\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [this.state.totalCO2, \" g CO2\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => this.setState({\n                lgShow: true\n              }),\n              block: true,\n              className: \"darkgreen-background\",\n              children: \"Harvest!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Modal, {\n              size: \"lg\",\n              show: this.state.lgShow,\n              onHide: () => this.setState({\n                lgShow: false\n              }),\n              \"aria-labelledby\": \"example-modal-sizes-title-lg\",\n              children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n                closeButton: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n                children: /*#__PURE__*/_jsxDEV(Container, {\n                  children: [/*#__PURE__*/_jsxDEV(Row, {\n                    children: [/*#__PURE__*/_jsxDEV(Col, {\n                      children: /*#__PURE__*/_jsxDEV(\"p\", {\n                        children: [\"How much \", this.props.pName, \" did you harvest?\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 128,\n                        columnNumber: 45\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 127,\n                      columnNumber: 41\n                    }, this), /*#__PURE__*/_jsxDEV(Col, {\n                      children: [/*#__PURE__*/_jsxDEV(NumericInput, {\n                        min: 0,\n                        value: this.state.quant,\n                        onChange: this.updateQ\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 131,\n                        columnNumber: 45\n                      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                        children: this.state.quant\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 132,\n                        columnNumber: 45\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 130,\n                      columnNumber: 41\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 126,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(Form, {\n                    children: ['checkbox'].map(type => /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"mb-3\",\n                      children: /*#__PURE__*/_jsxDEV(Form.Check, {\n                        type: type,\n                        id: `default-`,\n                        label: `add to your emissions total?`\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 138,\n                        columnNumber: 49\n                      }, this)\n                    }, `default-`, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 137,\n                      columnNumber: 45\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 135,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    className: \"darkgreen-background\",\n                    size: \"lg\",\n                    onClick: e => this.updatePlantQuantity(e),\n                    children: \"Confirm\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 146,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 125,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default Plant;","map":{"version":3,"sources":["/Users/annaqzhou/INFO/Capstone/verdancy-client/src/Components/Garden/Plant.js"],"names":["React","Component","useState","Card","Button","Row","Col","Modal","Form","Container","NumericInput","FontAwesomeIcon","faTimes","Plant","constructor","props","updateQ","quant","setState","deletePlant","e","response","fetch","pID","method","headers","Headers","state","auth","console","log","text","inGarden","updatePlantQuantity","preventDefault","sendData","Quantity","authHeader","body","JSON","stringify","status","error","newTotal","total","newCarbon","co2","lgShow","totalCO2","respMessage","localStorage","getItem","quantity","totCarbon","componentDidUpdate","render","pName","map","type"],"mappings":"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","sourcesContent":["import React, {Component, useState} from 'react';\nimport {Card, Button, Row, Col, Modal, Form, Container} from 'react-bootstrap';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport NumericInput from 'react-numeric-input';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {faTimes} from '@fortawesome/free-solid-svg-icons';\n\n\n// export class Plant extends React.Component {\n\n// function updateQuant(quant) {\n//     this.setState({quant});\n// }\n\n// function Plant(props) {\nclass Plant extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            lgShow: false,\n            quant: 0,\n            auth: localStorage.getItem(\"Authorization\"),\n            total: this.props.quantity,\n            co2: this.props.co2,\n            totalCO2: this.props.totCarbon,\n            inGarden: true\n        }\n    }\n    updateQ = quant => this.setState({ quant: quant });\n\n    deletePlant = async (e) => {\n        const response = await fetch(\"https://verdancy.capstone.ischool.uw.edu/v1/UserPlants/\" + this.props.pID, {\n            method: \"DELETE\",\n            headers: new Headers({\n                \"Authorization\": this.state.auth\n            })\n        });\n        if (response.state > 201) {\n            console.log(response.text());\n            return;\n        }\n        this.setState({inGarden: false});\n    }\n    \n    updatePlantQuantity = async (e) => {\n        e.preventDefault();\n        console.log(\"hello\");\n        // this.setState({lgShow: false});\n        const {quant} = this.state;\n        console.log(quant);\n        // const auth = localStorage.getItem(\"Authorization\");\n        const sendData = {\n            Quantity: quant\n        };\n        console.log(this.props.authHeader);\n        console.log(this.props.pID);\n        const response = await fetch(\"https://verdancy.capstone.ischool.uw.edu/v1/UserPlants/\" + this.props.pID, {\n            method: \"POST\",\n            body: JSON.stringify(sendData),\n            headers: new Headers({\n                \"Authorization\": this.state.auth,\n                \"Content-Type\": \"application/json\"\n            })\n        });\n        if (response.status > 201) {\n            const error = response.text();\n            // this.setState({error:}));\n            console.log(error);\n            return;\n        }\n        let newTotal = this.state.total + quant;\n        let newCarbon = this.state.co2 * newTotal;\n        this.setState({\n            lgShow: false,\n            total: newTotal,\n            totalCO2: newCarbon\n\n        });\n        // window.location.reload(true);\n        const respMessage = await response.body;\n        console.log(quant);\n        console.log(response);\n    }\n\n    componentDidUpdate() {\n        // this.updatePlantQuantity()\n    }\n\n    render() {\n        console.log(this.state.quant)\n    return (\n        <Col lg={6} className=\"harvest-card\">\n            <Container className=\"outline\">\n                <Row>\n                    <Col lg={5}>\n                        <img src=\"https://raw.githubusercontent.com/annazhoufast/plantastic/main/data/imgs/tomatoe.png?token=ALLXA23MPOVXSKYWA7DGQXTAULINM\"\n                            alt=\"drawing of plant\" className=\"garden-img\" />\n                    </Col>\n                    <Col lg={7} className=\"harvest\">\n                        <Row>\n                            <Col>\n                                <h4>\n                                    <b>{this.props.pName}</b>\n                                </h4>\n                            </Col>\n                            <Col>\n                                <FontAwesomeIcon icon={faTimes} />\n                            </Col>\n                        </Row>\n                        <p>Harvest Total</p>\n                        {/* <p>{this.props.quantity}</p> */}\n                        <p>{this.state.total}</p>\n                        <p>Carbon Emissions Saved</p>\n                        {/* <p>{this.props.totCarbon} g</p> */}\n                        <p>{this.state.totalCO2} g CO2</p>\n                        <Button onClick={() => this.setState({lgShow: true})} block className=\"darkgreen-background\">Harvest!</Button>\n                        <Modal\n                            size=\"lg\"\n                            show={this.state.lgShow}\n                            onHide={() => this.setState({lgShow: false})}\n                            aria-labelledby=\"example-modal-sizes-title-lg\"\n                        >\n                            <Modal.Header closeButton></Modal.Header>\n                            <Modal.Body>\n                                <Container>\n                                    <Row>\n                                        <Col>\n                                            <p>How much {this.props.pName} did you harvest?</p>\n                                        </Col>\n                                        <Col>\n                                            <NumericInput min={0} value={this.state.quant} onChange={this.updateQ} />\n                                            <p>{this.state.quant}</p>\n                                        </Col>\n                                    </Row>\n                                    <Form>\n                                        {['checkbox'].map((type) => (\n                                            <div key={`default-`} className=\"mb-3\">\n                                                <Form.Check\n                                                    type={type}\n                                                    id={`default-`}\n                                                    label={`add to your emissions total?`}\n                                                />\n                                            </div>\n                                        ))}\n                                    </Form>\n                                    <Button className=\"darkgreen-background\" size=\"lg\" onClick={(e) => this.updatePlantQuantity(e)}>Confirm</Button>\n                                </Container>\n                            </Modal.Body>\n                        </Modal>\n                    </Col>\n                </Row>\n            </Container>\n        </Col>\n    )\n                                        }\n}\nexport default Plant;\n"]},"metadata":{},"sourceType":"module"}