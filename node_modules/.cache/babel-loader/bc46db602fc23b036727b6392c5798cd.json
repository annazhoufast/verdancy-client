{"ast":null,"code":"var _jsxFileName = \"/Users/annaqzhou/go/src/plantastic/client/src/Components/Garden/PlantGroup.js\";\nimport React, { Component, useState } from 'react';\nimport Plant from \"./Plant\";\nimport { Row } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class PlantGroup extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      items: [],\n      authHeader: this.props.authHeader\n    };\n  }\n  /*\n          fetch('URL_GOES_HERE', { \n      method: 'post', \n      headers: new Headers({\n          'Authorization': 'Basic '+btoa('username:password'), \n          'Content-Type': 'application/x-www-form-urlencoded'\n      }), \n      body: 'A=1&B=2'\n      });\n  */\n\n\n  componentDidMount() {\n    fetch(\"https://verdancy.capstone.ischool.uw.edu/v1/user/\", {\n      method: 'GET',\n      headers: new Headers({\n        'Authorization': this.state.authHeader\n      })\n    }).then(res => res.json()).then(result => {\n      this.setState({\n        isLoaded: true,\n        items: result\n      });\n    }, error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n  }\n\n  render() {\n    const {\n      error,\n      isLoaded,\n      items\n    } = this.state;\n    console.log(items);\n    console.log(this.props.authHeader); // let plants = [];\n    // for (let i = 0; i < 4; i++) {\n    //     plants.push(<Plant/>);\n    // }\n\n    if (error) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Error: \", error.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 20\n      }, this);\n    } else if (!isLoaded) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 20\n      }, this);\n    } else {\n      return (\n        /*#__PURE__*/\n        // <div>\n        //     {plants}\n        // </div>\n        _jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            children: items.map(item => /*#__PURE__*/_jsxDEV(Plant, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }, this)\n      );\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/annaqzhou/go/src/plantastic/client/src/Components/Garden/PlantGroup.js"],"names":["React","Component","useState","Plant","Row","PlantGroup","constructor","props","state","error","isLoaded","items","authHeader","componentDidMount","fetch","method","headers","Headers","then","res","json","result","setState","render","console","log","message","map","item"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAAQC,GAAR,QAAkB,iBAAlB;;AAEA,OAAO,MAAMC,UAAN,SAAyBL,KAAK,CAACC,SAA/B,CAAyC;AAC5CK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,IADE;AAETC,MAAAA,QAAQ,EAAE,KAFD;AAGTC,MAAAA,KAAK,EAAE,EAHE;AAITC,MAAAA,UAAU,EAAE,KAAKL,KAAL,CAAWK;AAJd,KAAb;AAMH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEIC,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,KAAK,CAAC,mDAAD,EAAsD;AACvDC,MAAAA,MAAM,EAAE,KAD+C;AAEvDC,MAAAA,OAAO,EAAE,IAAIC,OAAJ,CAAY;AACjB,yBAAiB,KAAKT,KAAL,CAAWI;AADX,OAAZ;AAF8C,KAAtD,CAAL,CAMKM,IANL,CAMUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EANjB,EAOKF,IAPL,CAQSG,MAAD,IAAY;AACR,WAAKC,QAAL,CAAc;AACVZ,QAAAA,QAAQ,EAAE,IADA;AAEVC,QAAAA,KAAK,EAAEU;AAFG,OAAd;AAIH,KAbT,EAcSZ,KAAD,IAAW;AACP,WAAKa,QAAL,CAAc;AACVZ,QAAAA,QAAQ,EAAE,IADA;AAEVD,QAAAA;AAFU,OAAd;AAIH,KAnBT;AAqBH;;AAEDc,EAAAA,MAAM,GAAG;AACL,UAAM;AAACd,MAAAA,KAAD;AAAQC,MAAAA,QAAR;AAAkBC,MAAAA;AAAlB,QAA2B,KAAKH,KAAtC;AACAgB,IAAAA,OAAO,CAACC,GAAR,CAAYd,KAAZ;AACAa,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKlB,KAAL,CAAWK,UAAvB,EAHK,CAIL;AACA;AACA;AACA;;AACA,QAAIH,KAAJ,EAAW;AACP,0BAAO;AAAA,8BAAaA,KAAK,CAACiB,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAFD,MAEO,IAAI,CAAChB,QAAL,EAAe;AAClB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAFM,MAEA;AACH;AAAA;AACI;AACA;AACA;AACA;AAAA,iCACI,QAAC,GAAD;AAAA,sBAGQC,KAAK,CAACgB,GAAN,CAAUC,IAAI,iBACV,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,oBADJ;AAHR;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAJJ;AAeH;AACJ;;AA1E2C","sourcesContent":["import React, {Component, useState} from 'react';\nimport Plant from \"./Plant\";\nimport {Row} from 'react-bootstrap';\n\nexport class PlantGroup extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            error: null,\n            isLoaded: false,\n            items: [],\n            authHeader: this.props.authHeader\n        };\n    }\n    /*\n            fetch('URL_GOES_HERE', { \n        method: 'post', \n        headers: new Headers({\n            'Authorization': 'Basic '+btoa('username:password'), \n            'Content-Type': 'application/x-www-form-urlencoded'\n        }), \n        body: 'A=1&B=2'\n        });\n    */\n\n    componentDidMount() {\n        fetch(\"https://verdancy.capstone.ischool.uw.edu/v1/user/\", {\n            method: 'GET',\n            headers: new Headers({\n                'Authorization': this.state.authHeader\n            })\n        })\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    this.setState({\n                        isLoaded: true,\n                        items: result\n                    });\n                },\n                (error) => {\n                    this.setState({\n                        isLoaded: true,\n                        error\n                    });\n                }\n            )\n    }\n\n    render() {\n        const {error, isLoaded, items} = this.state;\n        console.log(items);\n        console.log(this.props.authHeader)\n        // let plants = [];\n        // for (let i = 0; i < 4; i++) {\n        //     plants.push(<Plant/>);\n        // }\n        if (error) {\n            return <div>Error: {error.message}</div>\n        } else if (!isLoaded) {\n            return <div>Loading...</div>\n        } else {\n            return (\n                // <div>\n                //     {plants}\n                // </div>\n                <div>\n                    <Row>\n                        {/* {plants} */}\n                        {\n                            items.map(item => (\n                                <Plant />\n                            ))\n                        }\n                    </Row>\n                </div>\n            )\n        }\n    }\n}"]},"metadata":{},"sourceType":"module"}