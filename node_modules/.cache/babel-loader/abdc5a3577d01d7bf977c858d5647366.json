{"ast":null,"code":"var _jsxFileName = \"/Users/annaqzhou/go/src/plantastic/client/src/Components/Search/ResultGroup.js\";\nimport React, { Component, useState } from 'react';\nimport { Result } from './Result';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class ResultGroup extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      items: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://verdancy.capstone.ischool.uw.edu/v1/plants\").then(response => response.json()).then(result => {\n      this.setState({\n        isLoaded: true,\n        items: result.items\n      });\n    }, error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n  }\n\n  render() {\n    const {\n      error,\n      isLoaded,\n      items\n    } = this.state;\n\n    if (error) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Error: \", error.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 20\n      }, this);\n    } else {\n      /*#__PURE__*/\n      _jsxDEV(\"div\", {\n        children: items.map(item => /*#__PURE__*/_jsxDEV(Result, {\n          pName: item.PlantName,\n          pSName: item.PlantScientificName,\n          difficulty: item.Difficulty,\n          image: item.ImageLink\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this);\n    } // let r = [];\n    // for (let i = 0; i < 6; i++) {\n    //     r.push(<Result/>);\n    // }\n    // return (\n    //     <div>\n    //         {r}\n    //     </div>\n    // )\n\n  }\n\n}","map":{"version":3,"sources":["/Users/annaqzhou/go/src/plantastic/client/src/Components/Search/ResultGroup.js"],"names":["React","Component","useState","Result","ResultGroup","constructor","props","state","error","isLoaded","items","componentDidMount","fetch","then","response","json","result","setState","render","message","map","item","PlantName","PlantScientificName","Difficulty","ImageLink"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,MAAR,QAAqB,UAArB;;AAEA,OAAO,MAAMC,WAAN,SAA0BJ,KAAK,CAACC,SAAhC,CAA0C;AAE7CI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,IADE;AAETC,MAAAA,QAAQ,EAAE,KAFD;AAGTC,MAAAA,KAAK,EAAE;AAHE,KAAb;AAKH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,KAAK,CAAC,oDAAD,CAAL,CACKC,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAGSG,MAAD,IAAY;AACR,WAAKC,QAAL,CAAc;AACVR,QAAAA,QAAQ,EAAE,IADA;AAEVC,QAAAA,KAAK,EAAEM,MAAM,CAACN;AAFJ,OAAd;AAIH,KART,EASSF,KAAD,IAAW;AACP,WAAKS,QAAL,CAAc;AACVR,QAAAA,QAAQ,EAAE,IADA;AAEVD,QAAAA;AAFU,OAAd;AAIH,KAdT;AAgBH;;AACDU,EAAAA,MAAM,GAAG;AACL,UAAM;AAACV,MAAAA,KAAD;AAAQC,MAAAA,QAAR;AAAkBC,MAAAA;AAAlB,QAA2B,KAAKH,KAAtC;;AACA,QAAIC,KAAJ,EAAW;AACP,0BAAO;AAAA,8BAAaA,KAAK,CAACW,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAFD,MAEO;AACH;AAAA;AAAA,kBACKT,KAAK,CAACU,GAAN,CAAUC,IAAI,iBACX,QAAC,MAAD;AAAQ,UAAA,KAAK,EAAEA,IAAI,CAACC,SAApB;AAA+B,UAAA,MAAM,EAAED,IAAI,CAACE,mBAA5C;AACI,UAAA,UAAU,EAAEF,IAAI,CAACG,UADrB;AACiC,UAAA,KAAK,EAAEH,IAAI,CAACI;AAD7C;AAAA;AAAA;AAAA;AAAA,gBADH;AADL;AAAA;AAAA;AAAA;AAAA;AAMH,KAXI,CAYL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACH;;AAlD4C","sourcesContent":["import React, {Component, useState} from 'react';\nimport {Result} from './Result';\n\nexport class ResultGroup extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            error: null,\n            isLoaded: false,\n            items: []\n        };\n    }\n\n    componentDidMount() {\n        fetch(\"https://verdancy.capstone.ischool.uw.edu/v1/plants\")\n            .then(response => response.json())\n            .then(\n                (result) => {\n                    this.setState({\n                        isLoaded: true,\n                        items: result.items\n                    });\n                },\n                (error) => {\n                    this.setState({\n                        isLoaded: true,\n                        error\n                    });\n                }\n            )\n    }\n    render() {\n        const {error, isLoaded, items} = this.state;\n        if (error) {\n            return <div>Error: {error.message}</div>;\n        } else {\n            <div>\n                {items.map(item => (\n                    <Result pName={item.PlantName} pSName={item.PlantScientificName}\n                        difficulty={item.Difficulty} image={item.ImageLink} />\n                ))}\n            </div>\n        }\n        // let r = [];\n        // for (let i = 0; i < 6; i++) {\n        //     r.push(<Result/>);\n        // }\n        // return (\n        //     <div>\n        //         {r}\n        //     </div>\n        // )\n    }\n}"]},"metadata":{},"sourceType":"module"}