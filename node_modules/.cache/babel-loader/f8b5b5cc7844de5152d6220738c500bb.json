{"ast":null,"code":"var _jsxFileName = \"/Users/annaqzhou/go/src/plantastic/client/src/Components/Garden/Plant.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useState } from 'react';\nimport { Card, Button, Row, Col, Modal, Form } from 'react-bootstrap';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport NumericInput from 'react-numeric-input'; // export class Plant extends React.Component {\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Plant() {\n  _s();\n\n  const [lgShow, setLgShow] = useState(false);\n  return /*#__PURE__*/_jsxDEV(Col, {\n    lg: 6,\n    className: \"harvest-card\",\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          lg: 5,\n          children: /*#__PURE__*/_jsxDEV(Card.Img, {\n            src: \"https://raw.githubusercontent.com/annazhoufast/plantastic/main/data/imgs/tomatoe.png?token=ALLXA25BKVLL7A7AEQS3W3LASHPF6\",\n            alt: \"drawing of plant\",\n            className: \"garden-img\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          lg: 7,\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            className: \"harvest\",\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                children: /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: \"Tomatoes\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 24,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 23,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Harvest Total\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 28,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 29,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Carbon Emissions Saved\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 30,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"357 g\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 31,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => setLgShow(true),\n              block: true,\n              children: \"Harvest!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Modal, {\n              size: \"lg\",\n              show: lgShow,\n              onHide: () => setLgShow(false),\n              \"aria-labelledby\": \"example-modal-sizes-title-lg\",\n              children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n                closeButton: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n                children: [/*#__PURE__*/_jsxDEV(Row, {\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    children: /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: \"How many tomatoes did you harvest?\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 44,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 43,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    children: /*#__PURE__*/_jsxDEV(NumericInput, {\n                      min: 0\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 47,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 46,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 42,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Row, {\n                  children: /*#__PURE__*/_jsxDEV(Form, {\n                    children: ['checkbox'].map(type => /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"mb-3\",\n                      children: /*#__PURE__*/_jsxDEV(Form.Check, {\n                        type: type,\n                        id: `default-${type}`,\n                        label: `add to your emissions total?`\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 54,\n                        columnNumber: 49\n                      }, this)\n                    }, `default-${type}`, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 53,\n                      columnNumber: 49\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 51,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 50,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  children: \"Confirm\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 65,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n} // render(<Plant />);\n\n\n_s(Plant, \"KwAmMpBzpejpZoNIqJ++o9hKksA=\");\n\n_c = Plant;\nexport default Plant;\n\nvar _c;\n\n$RefreshReg$(_c, \"Plant\");","map":{"version":3,"sources":["/Users/annaqzhou/go/src/plantastic/client/src/Components/Garden/Plant.js"],"names":["React","Component","useState","Card","Button","Row","Col","Modal","Form","NumericInput","Plant","lgShow","setLgShow","map","type"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,IAAR,EAAcC,MAAd,EAAsBC,GAAtB,EAA2BC,GAA3B,EAAgCC,KAAhC,EAAuCC,IAAvC,QAAkD,iBAAlD;AACA,OAAO,sCAAP;AACA,OAAOC,YAAP,MAAyB,qBAAzB,C,CAEA;;;;AACA,SAASC,KAAT,GAAiB;AAAA;;AACb,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,KAAD,CAApC;AACA,sBACI,QAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAY,IAAA,SAAS,EAAC,cAAtB;AAAA,2BACI,QAAC,IAAD;AAAA,6BACI,QAAC,GAAD;AAAA,gCACI,QAAC,GAAD;AAAK,UAAA,EAAE,EAAE,CAAT;AAAA,iCAEI,QAAC,IAAD,CAAM,GAAN;AAAU,YAAA,GAAG,EAAC,0HAAd;AACI,YAAA,GAAG,EAAC,kBADR;AAEI,YAAA,SAAS,EAAC;AAFd;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAOI,QAAC,GAAD;AAAK,UAAA,EAAE,EAAE,CAAT;AAAA,iCACI,QAAC,IAAD,CAAM,IAAN;AAAW,YAAA,SAAS,EAAC,SAArB;AAAA,oCACI,QAAC,IAAD,CAAM,KAAN;AAAA,qCAEI;AAAA,uCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,oBADJ,eAOI,QAAC,IAAD,CAAM,IAAN;AAAA,sCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPJ,eAaI,QAAC,MAAD;AAAQ,cAAA,OAAO,EAAE,MAAMU,SAAS,CAAC,IAAD,CAAhC;AAAwC,cAAA,KAAK,MAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAbJ,eAcI,QAAC,KAAD;AACI,cAAA,IAAI,EAAC,IADT;AAEI,cAAA,IAAI,EAAED,MAFV;AAGI,cAAA,MAAM,EAAE,MAAMC,SAAS,CAAC,KAAD,CAH3B;AAII,iCAAgB,8BAJpB;AAAA,sCAMI,QAAC,KAAD,CAAO,MAAP;AAAc,gBAAA,WAAW;AAAzB;AAAA;AAAA;AAAA;AAAA,sBANJ,eAOI,QAAC,KAAD,CAAO,IAAP;AAAA,wCACI,QAAC,GAAD;AAAA,0CACI,QAAC,GAAD;AAAA,2CACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,0BADJ,eAII,QAAC,GAAD;AAAA,2CACI,QAAC,YAAD;AAAc,sBAAA,GAAG,EAAE;AAAnB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,0BAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eASI,QAAC,GAAD;AAAA,yCACI,QAAC,IAAD;AAAA,8BACK,CAAC,UAAD,EAAaC,GAAb,CAAkBC,IAAD,iBACd;AAA6B,sBAAA,SAAS,EAAC,MAAvC;AAAA,6CACA,QAAC,IAAD,CAAM,KAAN;AACI,wBAAA,IAAI,EAAEA,IADV;AAEI,wBAAA,EAAE,EAAG,WAAUA,IAAK,EAFxB;AAGI,wBAAA,KAAK,EAAG;AAHZ;AAAA;AAAA;AAAA;AAAA;AADA,uBAAW,WAAUA,IAAK,EAA1B;AAAA;AAAA;AAAA;AAAA,4BADH;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,wBATJ,eAwBQ,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAxBR;AAAA;AAAA;AAAA;AAAA;AAAA,sBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBAdJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAmEH,C,CAED;;;GAvESJ,K;;KAAAA,K;AAwET,eAAeA,KAAf","sourcesContent":["import React, {Component, useState} from 'react';\nimport {Card, Button, Row, Col, Modal, Form} from 'react-bootstrap';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport NumericInput from 'react-numeric-input';\n\n// export class Plant extends React.Component {\nfunction Plant() {\n    const [lgShow, setLgShow] = useState(false);\n    return (\n        <Col lg={6} className=\"harvest-card\">\n            <Card>\n                <Row>\n                    <Col lg={5}>\n                        {/* <img src={this.props.img} alt=\"drawing of plant\" /> */}\n                        <Card.Img src=\"https://raw.githubusercontent.com/annazhoufast/plantastic/main/data/imgs/tomatoe.png?token=ALLXA25BKVLL7A7AEQS3W3LASHPF6\"\n                            alt=\"drawing of plant\"\n                            className=\"garden-img\" />\n                    </Col>\n                    <Col lg={7}>\n                        <Card.Body className=\"harvest\">\n                            <Card.Title>\n                                {/* {this.props.pName} */}\n                                <h4>\n                                    <b>Tomatoes</b>\n                                </h4>\n                            </Card.Title>\n                            <Card.Text>\n                                <p>Harvest Total</p>\n                                <p>3</p>\n                                <p>Carbon Emissions Saved</p>\n                                <p>357 g</p>\n                            </Card.Text>\n                            <Button onClick={() => setLgShow(true)} block>Harvest!</Button>\n                            <Modal\n                                size=\"lg\"\n                                show={lgShow}\n                                onHide={() => setLgShow(false)}\n                                aria-labelledby=\"example-modal-sizes-title-lg\"\n                            >\n                                <Modal.Header closeButton></Modal.Header>\n                                <Modal.Body>\n                                    <Row>\n                                        <Col>\n                                            <p>How many tomatoes did you harvest?</p>\n                                        </Col>\n                                        <Col>\n                                            <NumericInput min={0} />\n                                        </Col>\n                                    </Row>\n                                    <Row>\n                                        <Form>\n                                            {['checkbox'].map((type) => (\n                                                <div key={`default-${type}`} className=\"mb-3\">\n                                                <Form.Check \n                                                    type={type}\n                                                    id={`default-${type}`}\n                                                    label={`add to your emissions total?`}\n                                                />\n\n                                                </div>\n                                            ))}\n                                        </Form>\n                                    </Row>\n                                    {/* <Row> */}\n                                        <Button>Confirm</Button>\n                                    {/* </Row> */}\n                                </Modal.Body>\n                            </Modal>\n                        </Card.Body>\n            \n                    </Col>\n                </Row>\n            </Card>\n        </Col>\n    )\n}\n\n// render(<Plant />);\nexport default Plant;"]},"metadata":{},"sourceType":"module"}