{"ast":null,"code":"var _jsxFileName = \"/Users/annaqzhou/go/src/plantastic/client/src/Components/Garden/PlantGroup.js\";\nimport React, { Component, useState } from 'react';\nimport Plant from \"./Plant\";\nimport { Row } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class PlantGroup extends React.Component {\n  constructor(props) {\n    super(props); // this.state = {\n    //     // error: null,\n    //     // isLoaded: false,\n    //     // items: {this.props.plants}\n    //     // authHeader: this.props.authHeader\n    // };\n\n    this.stuff = this.props.plants;\n  }\n  /*\n          fetch('URL_GOES_HERE', { \n      method: 'post', \n      headers: new Headers({\n          'Authorization': 'Basic '+btoa('username:password'), \n          'Content-Type': 'application/x-www-form-urlencoded'\n      }), \n      body: 'A=1&B=2'\n      });\n  */\n  // componentDidMount() {\n  //     fetch(\"https://verdancy.capstone.ischool.uw.edu/v1/UserPlants/\", {\n  //         method: 'GET',\n  //         headers: new Headers({\n  //             'Authorization': this.state.authHeader\n  //         })\n  //     })\n  //         .then(res => res.json())\n  //         .then(\n  //             (result) => {\n  //                 this.setState({\n  //                     isLoaded: true,\n  //                     items: result\n  //                 });\n  //             },\n  //             (error) => {\n  //                 this.setState({\n  //                     isLoaded: true,\n  //                     error\n  //                 });\n  //             }\n  //         )\n  // }\n\n\n  render() {\n    const {\n      error,\n      isLoaded,\n      items\n    } = this.state;\n    console.log(this.props.plants); // let plants = [];\n    // for (let i = 0; i < 4; i++) {\n    //     plants.push(<Plant/>);\n    // }\n    // if (error) {\n    //     return <div>Error: {error.message}</div>\n    // } else if (!isLoaded) {\n    //     return <div>Loading...</div>\n    // } else {\n    //     return (\n    //         <div>\n    //             <Row>\n    //                 {/* {plants} */}\n    //                 {\n    //                     items.map(item => (\n    //                         <Plant />\n    //                     ))\n    //                 }\n    //             </Row>\n    //         </div>\n    //     )\n    // }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Row, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/annaqzhou/go/src/plantastic/client/src/Components/Garden/PlantGroup.js"],"names":["React","Component","useState","Plant","Row","PlantGroup","constructor","props","stuff","plants","render","error","isLoaded","items","state","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAAQC,GAAR,QAAkB,iBAAlB;;AAEA,OAAO,MAAMC,UAAN,SAAyBL,KAAK,CAACC,SAA/B,CAAyC;AAC5CK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN,EADe,CAEf;AACA;AACA;AACA;AACA;AACA;;AACA,SAAKC,KAAL,GAAa,KAAKD,KAAL,CAAWE,MAAxB;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAC,EAAAA,MAAM,GAAG;AACL,UAAM;AAACC,MAAAA,KAAD;AAAQC,MAAAA,QAAR;AAAkBC,MAAAA;AAAlB,QAA2B,KAAKC,KAAtC;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKT,KAAL,CAAWE,MAAvB,EAFK,CAGL;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,wBACI;AAAA,6BACI,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAOH;;AA/E2C","sourcesContent":["import React, {Component, useState} from 'react';\nimport Plant from \"./Plant\";\nimport {Row} from 'react-bootstrap';\n\nexport class PlantGroup extends React.Component {\n    constructor(props) {\n        super(props);\n        // this.state = {\n        //     // error: null,\n        //     // isLoaded: false,\n        //     // items: {this.props.plants}\n        //     // authHeader: this.props.authHeader\n        // };\n        this.stuff = this.props.plants;\n    }\n    /*\n            fetch('URL_GOES_HERE', { \n        method: 'post', \n        headers: new Headers({\n            'Authorization': 'Basic '+btoa('username:password'), \n            'Content-Type': 'application/x-www-form-urlencoded'\n        }), \n        body: 'A=1&B=2'\n        });\n    */\n\n    // componentDidMount() {\n    //     fetch(\"https://verdancy.capstone.ischool.uw.edu/v1/UserPlants/\", {\n    //         method: 'GET',\n    //         headers: new Headers({\n    //             'Authorization': this.state.authHeader\n    //         })\n    //     })\n    //         .then(res => res.json())\n    //         .then(\n    //             (result) => {\n    //                 this.setState({\n    //                     isLoaded: true,\n    //                     items: result\n    //                 });\n    //             },\n    //             (error) => {\n    //                 this.setState({\n    //                     isLoaded: true,\n    //                     error\n    //                 });\n    //             }\n    //         )\n    // }\n\n    render() {\n        const {error, isLoaded, items} = this.state;\n        console.log(this.props.plants);\n        // let plants = [];\n        \n        // for (let i = 0; i < 4; i++) {\n        //     plants.push(<Plant/>);\n        // }\n        // if (error) {\n        //     return <div>Error: {error.message}</div>\n        // } else if (!isLoaded) {\n        //     return <div>Loading...</div>\n        // } else {\n        //     return (\n        //         <div>\n        //             <Row>\n        //                 {/* {plants} */}\n        //                 {\n        //                     items.map(item => (\n        //                         <Plant />\n        //                     ))\n        //                 }\n        //             </Row>\n        //         </div>\n        //     )\n        // }\n        return (\n            <div>\n                <Row>\n\n                </Row>\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}