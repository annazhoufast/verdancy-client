{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amjjl\\\\OneDrive\\\\Documents\\\\College\\\\INFO Capstone\\\\verdancy-client\\\\src\\\\Components\\\\Garden\\\\Plant.js\";\nimport React, { Component, useState } from 'react';\nimport { Card, Button, Row, Col, Modal, Form, Container } from 'react-bootstrap';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport NumericInput from 'react-numeric-input'; // export class Plant extends React.Component {\n// function updateQuant(quant) {\n//     this.setState({quant});\n// }\n// function Plant(props) {\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Plant extends Component {\n  constructor(props) {\n    super(props);\n\n    this.updateQ = quant => this.setState({\n      quant: quant\n    });\n\n    this.updatePlantQuantity = async e => {\n      e.preventDefault();\n      console.log(\"hello\"); // this.setState({lgShow: false});\n\n      const {\n        quant\n      } = this.state;\n      console.log(quant); // const auth = localStorage.getItem(\"Authorization\");\n\n      const sendData = {\n        Quantity: quant\n      };\n      console.log(this.props.authHeader);\n      console.log(this.props.pID);\n      const response = await fetch(\"https://verdancy.capstone.ischool.uw.edu/v1/UserPlants/\" + this.props.pID, {\n        method: \"POST\",\n        body: JSON.stringify(sendData),\n        headers: new Headers({\n          \"Authorization\": this.state.auth,\n          \"Content-Type\": \"application/json\"\n        })\n      });\n\n      if (response.status > 201) {\n        const error = response.text(); // this.setState({error:}));\n\n        console.log(error);\n        return;\n      }\n\n      let newTotal = this.state.total + quant;\n      let newCarbon = this.state.co2 * newTotal;\n      this.setState({\n        lgShow: false,\n        total: newTotal,\n        totalCO2: newCarbon\n      }); // window.location.reload(true);\n\n      const respMessage = await response.body;\n      console.log(quant);\n      console.log(response);\n    };\n\n    this.state = {\n      lgShow: false,\n      quant: 0,\n      auth: localStorage.getItem(\"Authorization\"),\n      total: this.props.quantity,\n      co2: this.props.co2,\n      totalCO2: this.props.totCarbon\n    };\n  }\n\n  componentDidUpdate() {// this.updatePlantQuantity()\n  }\n\n  render() {\n    console.log(this.state.quant);\n    return /*#__PURE__*/_jsxDEV(Col, {\n      lg: 6,\n      className: \"harvest-card\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        className: \"outline\",\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            lg: 5,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"https://raw.githubusercontent.com/annazhoufast/plantastic/main/data/imgs/tomatoe.png?token=ALLXA25BKVLL7A7AEQS3W3LASHPF6\",\n              alt: \"drawing of plant\",\n              className: \"garden-img\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            lg: 7,\n            className: \"harvest\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: /*#__PURE__*/_jsxDEV(\"b\", {\n                children: this.props.pName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Harvest Total\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: this.state.total\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Carbon Emissions Saved\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [this.state.totalCO2, \" g CO2\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => this.setState({\n                lgShow: true\n              }),\n              block: true,\n              className: \"green-btn\",\n              children: \"Harvest!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Modal, {\n              size: \"lg\",\n              show: this.state.lgShow,\n              onHide: () => this.setState({\n                lgShow: false\n              }),\n              \"aria-labelledby\": \"example-modal-sizes-title-lg\",\n              children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n                closeButton: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n                children: /*#__PURE__*/_jsxDEV(Container, {\n                  children: [/*#__PURE__*/_jsxDEV(Row, {\n                    children: [/*#__PURE__*/_jsxDEV(Col, {\n                      children: /*#__PURE__*/_jsxDEV(\"p\", {\n                        children: [\"How much \", this.props.pName, \" did you harvest?\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 104,\n                        columnNumber: 45\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 103,\n                      columnNumber: 41\n                    }, this), /*#__PURE__*/_jsxDEV(Col, {\n                      children: [/*#__PURE__*/_jsxDEV(NumericInput, {\n                        min: 0,\n                        value: this.state.quant,\n                        onChange: this.updateQ\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 107,\n                        columnNumber: 45\n                      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                        children: this.state.quant\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 108,\n                        columnNumber: 45\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 106,\n                      columnNumber: 41\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 102,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(Form, {\n                    children: ['checkbox'].map(type => /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"mb-3\",\n                      children: /*#__PURE__*/_jsxDEV(Form.Check, {\n                        type: type,\n                        id: `default-`,\n                        label: `add to your emissions total?`\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 114,\n                        columnNumber: 49\n                      }, this)\n                    }, `default-`, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 113,\n                      columnNumber: 45\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 111,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    className: \"green-btn\",\n                    size: \"lg\",\n                    onClick: e => this.updatePlantQuantity(e),\n                    children: \"Confirm\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 122,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default Plant;","map":{"version":3,"sources":["C:/Users/amjjl/OneDrive/Documents/College/INFO Capstone/verdancy-client/src/Components/Garden/Plant.js"],"names":["React","Component","useState","Card","Button","Row","Col","Modal","Form","Container","NumericInput","Plant","constructor","props","updateQ","quant","setState","updatePlantQuantity","e","preventDefault","console","log","state","sendData","Quantity","authHeader","pID","response","fetch","method","body","JSON","stringify","headers","Headers","auth","status","error","text","newTotal","total","newCarbon","co2","lgShow","totalCO2","respMessage","localStorage","getItem","quantity","totCarbon","componentDidUpdate","render","pName","map","type"],"mappings":"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","sourcesContent":["import React, {Component, useState} from 'react';\r\nimport {Card, Button, Row, Col, Modal, Form, Container} from 'react-bootstrap';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport NumericInput from 'react-numeric-input';\r\n\r\n\r\n// export class Plant extends React.Component {\r\n\r\n// function updateQuant(quant) {\r\n//     this.setState({quant});\r\n// }\r\n\r\n// function Plant(props) {\r\nclass Plant extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            lgShow: false,\r\n            quant: 0,\r\n            auth: localStorage.getItem(\"Authorization\"),\r\n            total: this.props.quantity,\r\n            co2: this.props.co2,\r\n            totalCO2: this.props.totCarbon\r\n        }\r\n    }\r\n    updateQ = quant => this.setState({ quant: quant });\r\n    \r\n    updatePlantQuantity = async (e) => {\r\n        e.preventDefault();\r\n        console.log(\"hello\");\r\n        // this.setState({lgShow: false});\r\n        const {quant} = this.state;\r\n        console.log(quant);\r\n        // const auth = localStorage.getItem(\"Authorization\");\r\n        const sendData = {\r\n            Quantity: quant\r\n        };\r\n        console.log(this.props.authHeader);\r\n        console.log(this.props.pID);\r\n        const response = await fetch(\"https://verdancy.capstone.ischool.uw.edu/v1/UserPlants/\" + this.props.pID, {\r\n            method: \"POST\",\r\n            body: JSON.stringify(sendData),\r\n            headers: new Headers({\r\n                \"Authorization\": this.state.auth,\r\n                \"Content-Type\": \"application/json\"\r\n            })\r\n        });\r\n        if (response.status > 201) {\r\n            const error = response.text();\r\n            // this.setState({error:}));\r\n            console.log(error);\r\n            return;\r\n        }\r\n        let newTotal = this.state.total + quant;\r\n        let newCarbon = this.state.co2 * newTotal;\r\n        this.setState({\r\n            lgShow: false,\r\n            total: newTotal,\r\n            totalCO2: newCarbon\r\n\r\n        });\r\n        // window.location.reload(true);\r\n        const respMessage = await response.body;\r\n        console.log(quant);\r\n        console.log(response);\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        // this.updatePlantQuantity()\r\n    }\r\n\r\n    render() {\r\n        console.log(this.state.quant)\r\n    return (\r\n        <Col lg={6} className=\"harvest-card\">\r\n            <Container className=\"outline\">\r\n                <Row>\r\n                    <Col lg={5}>\r\n                        <img src=\"https://raw.githubusercontent.com/annazhoufast/plantastic/main/data/imgs/tomatoe.png?token=ALLXA25BKVLL7A7AEQS3W3LASHPF6\"\r\n                            alt=\"drawing of plant\" className=\"garden-img\" />\r\n                    </Col>\r\n                    <Col lg={7} className=\"harvest\">\r\n                        <h4>\r\n                            <b>{this.props.pName}</b>\r\n                        </h4>\r\n                        <p>Harvest Total</p>\r\n                        {/* <p>{this.props.quantity}</p> */}\r\n                        <p>{this.state.total}</p>\r\n                        <p>Carbon Emissions Saved</p>\r\n                        {/* <p>{this.props.totCarbon} g</p> */}\r\n                        <p>{this.state.totalCO2} g CO2</p>\r\n                        <Button onClick={() => this.setState({lgShow: true})} block className=\"green-btn\">Harvest!</Button>\r\n                        <Modal\r\n                            size=\"lg\"\r\n                            show={this.state.lgShow}\r\n                            onHide={() => this.setState({lgShow: false})}\r\n                            aria-labelledby=\"example-modal-sizes-title-lg\"\r\n                        >\r\n                            <Modal.Header closeButton></Modal.Header>\r\n                            <Modal.Body>\r\n                                <Container>\r\n                                    <Row>\r\n                                        <Col>\r\n                                            <p>How much {this.props.pName} did you harvest?</p>\r\n                                        </Col>\r\n                                        <Col>\r\n                                            <NumericInput min={0} value={this.state.quant} onChange={this.updateQ} />\r\n                                            <p>{this.state.quant}</p>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Form>\r\n                                        {['checkbox'].map((type) => (\r\n                                            <div key={`default-`} className=\"mb-3\">\r\n                                                <Form.Check\r\n                                                    type={type}\r\n                                                    id={`default-`}\r\n                                                    label={`add to your emissions total?`}\r\n                                                />\r\n                                            </div>\r\n                                        ))}\r\n                                    </Form>\r\n                                    <Button className=\"green-btn\" size=\"lg\" onClick={(e) => this.updatePlantQuantity(e)}>Confirm</Button>\r\n                                </Container>\r\n                            </Modal.Body>\r\n                        </Modal>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </Col>\r\n    )\r\n                                        }\r\n}\r\nexport default Plant;\r\n"]},"metadata":{},"sourceType":"module"}