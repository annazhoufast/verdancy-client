{"ast":null,"code":"var _jsxFileName = \"/Users/annaqzhou/INFO/Capstone/verdancy-client/src/Components/Search/Search.js\";\nimport React, { Component, useState } from 'react';\nimport { InputGroup, FormControl } from 'react-bootstrap';\nimport { ResultGroup } from './ResultGroup';\nimport { SearchBar } from './SearchBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Search extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      plants: [],\n      // isLoaded: false,\n      message: ''\n    };\n  }\n\n  componentDidMount() {\n    const response = fetch(\"https://verdancy.capstone.ischool.uw.edu/v1/plants\").then(res => res.json()).then(result => {\n      // console.log(result);\n      let s = result.map(item => /*#__PURE__*/_jsxDEV(Result, {\n        pName: item.PlantName,\n        pSName: item.PlantScientificName,\n        difficulty: item.Difficulty,\n        image: item.ImageLink,\n        id: item.PlantID\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 21\n      }, this));\n      this.setState({\n        stuff2: s,\n        isLoaded: true\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(SearchBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(ResultGroup, {\n        plants: this.state.plants\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/annaqzhou/INFO/Capstone/verdancy-client/src/Components/Search/Search.js"],"names":["React","Component","useState","InputGroup","FormControl","ResultGroup","SearchBar","Search","constructor","props","state","plants","message","componentDidMount","response","fetch","then","res","json","result","s","map","item","PlantName","PlantScientificName","Difficulty","ImageLink","PlantID","setState","stuff2","isLoaded","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,UAAR,EAAoBC,WAApB,QAAsC,iBAAtC;AACA,SAAQC,WAAR,QAA0B,eAA1B;AACA,SAAQC,SAAR,QAAwB,aAAxB;;AAEA,OAAO,MAAMC,MAAN,SAAqBP,KAAK,CAACC,SAA3B,CAAqC;AACxCO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,MAAM,EAAE,EADC;AAET;AACAC,MAAAA,OAAO,EAAE;AAHA,KAAb;AAKH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,UAAMC,QAAQ,GAAGC,KAAK,CAAC,oDAAD,CAAL,CACZC,IADY,CACPC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADA,EAEZF,IAFY,CAENG,MAAD,IAAY;AACd;AACA,UAAIC,CAAC,GAAGD,MAAM,CAACE,GAAP,CAAWC,IAAI,iBACnB,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAEA,IAAI,CAACC,SAApB;AAA+B,QAAA,MAAM,EAAED,IAAI,CAACE,mBAA5C;AACI,QAAA,UAAU,EAAEF,IAAI,CAACG,UADrB;AACiC,QAAA,KAAK,EAAEH,IAAI,CAACI,SAD7C;AACwD,QAAA,EAAE,EAAEJ,IAAI,CAACK;AADjE;AAAA;AAAA;AAAA;AAAA,cADI,CAAR;AAKA,WAAKC,QAAL,CAAc;AAACC,QAAAA,MAAM,EAAET,CAAT;AAAYU,QAAAA,QAAQ,EAAE;AAAtB,OAAd;AACH,KAVY,CAAjB;AAWH;;AAEDC,EAAAA,MAAM,GAAG;AACD,wBACI;AAAA,8BACI,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,WAAD;AAAa,QAAA,MAAM,EAAE,KAAKrB,KAAL,CAAWC;AAAhC;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAMP;;AA/BuC","sourcesContent":["import React, {Component, useState} from 'react';\nimport {InputGroup, FormControl} from 'react-bootstrap';\nimport {ResultGroup} from './ResultGroup';\nimport {SearchBar} from './SearchBar';\n\nexport class Search extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            plants: [],\n            // isLoaded: false,\n            message: ''\n        }\n    }\n\n    componentDidMount() {\n        const response = fetch(\"https://verdancy.capstone.ischool.uw.edu/v1/plants\")\n            .then(res => res.json())\n            .then((result) => {\n                // console.log(result);\n                let s = result.map(item => (\n                    <Result pName={item.PlantName} pSName={item.PlantScientificName}\n                        difficulty={item.Difficulty} image={item.ImageLink} id={item.PlantID} />\n                \n                ))\n                this.setState({stuff2: s, isLoaded: true});\n            })\n    }\n\n    render() {\n            return (\n                <div>\n                    <SearchBar/>\n                    <ResultGroup plants={this.state.plants} />\n                </div>\n            )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}