{"ast":null,"code":"var _jsxFileName = \"/Users/annaqzhou/go/src/plantastic/client/src/Components/Search/ResultGroup.js\";\nimport React, { Component, useState } from 'react';\nimport { Result } from './Result';\nimport { Row, CardDeck } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class ResultGroup extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      items: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://verdancy.capstone.ischool.uw.edu/v1/plants\").then(res => res.json()).then(result => {\n      console.log(result);\n      console.log(result.items);\n      this.setState({\n        isLoaded: true,\n        items: result\n      });\n    }, error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n  }\n\n  render() {\n    const {\n      error,\n      isLoaded,\n      items\n    } = this.state; // console.log(items);\n\n    if (error) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Error: \", error.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 20\n      }, this);\n    } else if (!isLoaded) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 20\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          className: \"db-row\",\n          children: items.map(item => /*#__PURE__*/_jsxDEV(Result, {\n            pName: item.PlantName,\n            pSName: item.PlantScientificName,\n            difficulty: item.Difficulty,\n            image: item.ImageLink,\n            id: item.PlantID\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this);\n    } // let r = [];\n    // for (let i = 0; i < 6; i++) {\n    //     r.push(<Result/>);\n    // }\n    // return (\n    //     <div>\n    //         {r}\n    //     </div>\n    // )\n\n  }\n\n}","map":{"version":3,"sources":["/Users/annaqzhou/go/src/plantastic/client/src/Components/Search/ResultGroup.js"],"names":["React","Component","useState","Result","Row","CardDeck","ResultGroup","constructor","props","state","error","isLoaded","items","componentDidMount","fetch","then","res","json","result","console","log","setState","render","message","map","item","PlantName","PlantScientificName","Difficulty","ImageLink","PlantID"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,MAAR,QAAqB,UAArB;AACA,SAAQC,GAAR,EAAaC,QAAb,QAA4B,iBAA5B;;AAEA,OAAO,MAAMC,WAAN,SAA0BN,KAAK,CAACC,SAAhC,CAA0C;AAE7CM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,IADE;AAETC,MAAAA,QAAQ,EAAE,KAFD;AAGTC,MAAAA,KAAK,EAAE;AAHE,KAAb;AAKH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,KAAK,CAAC,oDAAD,CAAL,CACKC,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAGSG,MAAD,IAAY;AACRC,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACN,KAAnB;AACA,WAAKS,QAAL,CAAc;AACVV,QAAAA,QAAQ,EAAE,IADA;AAEVC,QAAAA,KAAK,EAAEM;AAFG,OAAd;AAIH,KAVT,EAWSR,KAAD,IAAW;AACP,WAAKW,QAAL,CAAc;AACVV,QAAAA,QAAQ,EAAE,IADA;AAEVD,QAAAA;AAFU,OAAd;AAIH,KAhBT;AAkBH;;AACDY,EAAAA,MAAM,GAAG;AACL,UAAM;AAACZ,MAAAA,KAAD;AAAQC,MAAAA,QAAR;AAAkBC,MAAAA;AAAlB,QAA2B,KAAKH,KAAtC,CADK,CAEL;;AACA,QAAIC,KAAJ,EAAW;AACP,0BAAO;AAAA,8BAAaA,KAAK,CAACa,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAFD,MAEO,IAAI,CAACZ,QAAL,EAAe;AAClB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAFM,MAEA;AACH,0BACA;AAAA,+BACI,QAAC,GAAD;AAAK,UAAA,SAAS,EAAC,QAAf;AAAA,oBACKC,KAAK,CAACY,GAAN,CAAUC,IAAI,iBACX,QAAC,MAAD;AAAQ,YAAA,KAAK,EAAEA,IAAI,CAACC,SAApB;AAA+B,YAAA,MAAM,EAAED,IAAI,CAACE,mBAA5C;AACI,YAAA,UAAU,EAAEF,IAAI,CAACG,UADrB;AACiC,YAAA,KAAK,EAAEH,IAAI,CAACI,SAD7C;AACwD,YAAA,EAAE,EAAEJ,IAAI,CAACK;AADjE;AAAA;AAAA;AAAA;AAAA,kBADH;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADA;AAUH,KAlBI,CAmBL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACH;;AA3D4C","sourcesContent":["import React, {Component, useState} from 'react';\nimport {Result} from './Result';\nimport {Row, CardDeck} from 'react-bootstrap';\n\nexport class ResultGroup extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            error: null,\n            isLoaded: false,\n            items: []\n        };\n    }\n\n    componentDidMount() {\n        fetch(\"https://verdancy.capstone.ischool.uw.edu/v1/plants\")\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    console.log(result);\n                    console.log(result.items);\n                    this.setState({\n                        isLoaded: true,\n                        items: result\n                    });\n                },\n                (error) => {\n                    this.setState({\n                        isLoaded: true,\n                        error\n                    });\n                }\n            )\n    }\n    render() {\n        const {error, isLoaded, items} = this.state;\n        // console.log(items);\n        if (error) {\n            return <div>Error: {error.message}</div>;\n        } else if (!isLoaded) {\n            return <div>Loading...</div>;\n        } else {\n            return (\n            <div>\n                <Row className=\"db-row\">\n                    {items.map(item => (\n                        <Result pName={item.PlantName} pSName={item.PlantScientificName}\n                            difficulty={item.Difficulty} image={item.ImageLink} id={item.PlantID} />\n                    ))}\n                </Row>\n            </div>\n            )\n        }\n        // let r = [];\n        // for (let i = 0; i < 6; i++) {\n        //     r.push(<Result/>);\n        // }\n        // return (\n        //     <div>\n        //         {r}\n        //     </div>\n        // )\n    }\n}"]},"metadata":{},"sourceType":"module"}