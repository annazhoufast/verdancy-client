{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amjjl\\\\OneDrive\\\\Documents\\\\College\\\\INFO 498 F\\\\verdancy-client\\\\src\\\\Components\\\\Auth\\\\Components\\\\ForgotPassword\\\\ForgotPassword.js\";\nimport React, { Component } from 'react';\nimport Errors from '../../../Errors/Errors';\nimport api from '../../../../Constants/APIEndpoints/APIEndpoints';\nimport PageTypes from '../../../../Constants/PageTypes/PageTypes';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass ForgotPassword extends Component {\n  constructor(props) {\n    super(props);\n\n    this.sendResetCode = async e => {\n      e.preventDefault();\n      const {\n        email\n      } = this.state;\n      const sendData = {\n        email\n      };\n      const response = await fetch(api.base + api.handlers.resetPasscode, {\n        method: \"POST\",\n        body: JSON.stringify(sendData),\n        headers: new Headers({\n          \"Content-Type\": \"application/json\"\n        })\n      });\n\n      if (response.status >= 300) {\n        const error = await response.text();\n        this.setError(error);\n        return;\n      }\n\n      this.setError(\"\");\n      alert(\"A reset code has been sent to your email\");\n      this.setState({\n        resetCodeSent: true\n      });\n    };\n\n    this.updatePassword = async e => {\n      e.preventDefault();\n      const {\n        email,\n        password,\n        passwordConf,\n        resetCode\n      } = this.state;\n      const sendData = {\n        password,\n        passwordConf,\n        resetCode\n      };\n      const response = await fetch(api.base + api.handlers.passwords + email, {\n        method: \"PUT\",\n        body: JSON.stringify(sendData),\n        headers: new Headers({\n          \"Content-Type\": \"application/json\"\n        })\n      });\n\n      if (response.status >= 300) {\n        const error = await response.text();\n        this.setError(error);\n        return;\n      }\n\n      this.setError(\"\");\n      alert(\"Your password has been updated\");\n    };\n\n    this.setValue = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.setError = error => {\n      this.setState({\n        error\n      });\n    };\n\n    this.state = {\n      email: \"\",\n      password: \"\",\n      passwordConf: \"\",\n      resetCode: \"\",\n      resetCodeSent: false,\n      error: \"\"\n    };\n  }\n\n  render() {\n    const {\n      email,\n      password,\n      passwordConf,\n      resetCode,\n      resetCodeSent,\n      error\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Errors, {\n        error: error,\n        setError: this.setError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this), resetCodeSent ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: e => this.updatePassword(e),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Password: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              name: \"password\",\n              type: \"password\",\n              onChange: this.setValue,\n              value: password\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Password Confirmation: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              name: \"passwordConf\",\n              type: \"password\",\n              onChange: this.setValue,\n              value: passwordConf\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Reset Code: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              name: \"resetCode\",\n              onChange: this.setValue,\n              value: resetCode\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            value: \"Update my password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)\n      }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: e => this.sendResetCode(e),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Email: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              name: \"email\",\n              onChange: this.setValue,\n              value: email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            value: \"Send me a reset code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this)\n      }, void 0, false), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: e => this.props.setPage(e, PageTypes.signIn),\n        children: \"Back to sign in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default ForgotPassword;","map":{"version":3,"sources":["C:/Users/amjjl/OneDrive/Documents/College/INFO 498 F/verdancy-client/src/Components/Auth/Components/ForgotPassword/ForgotPassword.js"],"names":["React","Component","Errors","api","PageTypes","ForgotPassword","constructor","props","sendResetCode","e","preventDefault","email","state","sendData","response","fetch","base","handlers","resetPasscode","method","body","JSON","stringify","headers","Headers","status","error","text","setError","alert","setState","resetCodeSent","updatePassword","password","passwordConf","resetCode","passwords","setValue","target","name","value","render","setPage","signIn"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Errors from '../../../Errors/Errors';\r\nimport api from '../../../../Constants/APIEndpoints/APIEndpoints';\r\nimport PageTypes from '../../../../Constants/PageTypes/PageTypes';\r\n\r\nclass ForgotPassword extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email: \"\",\r\n            password: \"\",\r\n            passwordConf: \"\",\r\n            resetCode: \"\",\r\n            resetCodeSent: false,\r\n            error: \"\"\r\n        }\r\n    }\r\n\r\n    sendResetCode = async (e) => {\r\n        e.preventDefault();\r\n        const { email } = this.state;\r\n        const sendData = { email };\r\n        const response = await fetch(api.base + api.handlers.resetPasscode, {\r\n            method: \"POST\",\r\n            body: JSON.stringify(sendData),\r\n            headers: new Headers({\r\n                \"Content-Type\": \"application/json\"\r\n            })\r\n        });\r\n        if (response.status >= 300) {\r\n            const error = await response.text();\r\n            this.setError(error);\r\n            return;\r\n        }\r\n        this.setError(\"\");\r\n        alert(\"A reset code has been sent to your email\");\r\n        this.setState({ resetCodeSent: true });\r\n    }\r\n\r\n    updatePassword = async (e) => {\r\n        e.preventDefault();\r\n        const { email, password, passwordConf, resetCode } = this.state;\r\n        const sendData = { password, passwordConf, resetCode };\r\n        const response = await fetch(api.base + api.handlers.passwords + email, {\r\n            method: \"PUT\",\r\n            body: JSON.stringify(sendData),\r\n            headers: new Headers({\r\n                \"Content-Type\": \"application/json\"\r\n            })\r\n        });\r\n        if (response.status >= 300) {\r\n            const error = await response.text();\r\n            this.setError(error);\r\n            return;\r\n        }\r\n        this.setError(\"\");\r\n        alert(\"Your password has been updated\");\r\n    }\r\n\r\n    setValue = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n\r\n    setError = (error) => {\r\n        this.setState({ error });\r\n    }\r\n\r\n    render() {\r\n        const { email, password, passwordConf, resetCode, resetCodeSent, error } = this.state;\r\n        return <>\r\n            <Errors error={error} setError={this.setError} />\r\n            {resetCodeSent ?\r\n                <>\r\n                    <form onSubmit={(e) => this.updatePassword(e)}>\r\n                        <div>\r\n                            <span>Password: </span>\r\n                            <input name={\"password\"} type={\"password\"} onChange={this.setValue} value={password} />\r\n                        </div>\r\n                        <div>\r\n                            <span>Password Confirmation: </span>\r\n                            <input name={\"passwordConf\"} type={\"password\"} onChange={this.setValue} value={passwordConf} />\r\n                        </div>\r\n                        <div>\r\n                            <span>Reset Code: </span>\r\n                            <input name={\"resetCode\"} onChange={this.setValue} value={resetCode} />\r\n                        </div>\r\n                        <input type=\"submit\" value=\"Update my password\" />\r\n                    </form>\r\n                </>\r\n                :\r\n                <>\r\n                    <form onSubmit={(e) => this.sendResetCode(e)}>\r\n                        <div>\r\n                            <span>Email: </span>\r\n                            <input name={\"email\"} onChange={this.setValue} value={email} />\r\n                        </div>\r\n                        <input type=\"submit\" value=\"Send me a reset code\" />\r\n                    </form>\r\n                </>}\r\n            <button onClick={(e) => this.props.setPage(e, PageTypes.signIn)}>Back to sign in</button>\r\n\r\n\r\n        </>\r\n\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\nexport default ForgotPassword;"]},"metadata":{},"sourceType":"module"}