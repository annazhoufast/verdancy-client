{"ast":null,"code":"var _jsxFileName = \"/Users/annaqzhou/INFO/Capstone/verdancy-client/src/Components/Search/ResultGroup.js\";\nimport React, { Component, useState } from 'react';\nimport { Result } from './Result';\nimport { Row, CardDeck } from 'react-bootstrap';\nimport Form from './Form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class ResultGroup extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.editSearchTerm = e => {\n      this.setState({\n        searchTerm: e.target.value\n      });\n    };\n\n    this.dynamicSearch = () => {\n      return this.state.plants.filter(cur => cur.PlantName.toLowerCase().includes(this.state.searchTerm.toLowerCase()));\n    };\n\n    this.state = {\n      items: this.props.plants,\n      plants: [],\n      isLoaded: false,\n      searchTerm: ''\n    };\n  }\n\n  componentDidMount() {\n    const response = fetch(\"https://verdancy.capstone.ischool.uw.edu/v1/plants\").then(res => res.json()).then(result => {\n      // console.log(result);\n      this.setState({\n        plants: result,\n        isLoaded: true\n      });\n    });\n  }\n\n  render() {\n    // if (!this.state.isLoaded) {\n    //     return (\n    //         <div>Loading...</div>\n    //     )\n    // } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"results\",\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          className: \"db-row\",\n          children: this.state.plants.map(item => /*#__PURE__*/_jsxDEV(Result, {\n            pName: item.PlantName,\n            pSName: item.PlantScientificName,\n            difficulty: item.Difficulty,\n            image: item.ImageLink,\n            id: item.PlantID\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 33\n          }, this)) // .filter(d => d.PlantName.includes(this.state.searchMessage))\n          // this.state.plants\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 23\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 19\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }, this); // }\n  }\n\n}","map":{"version":3,"sources":["/Users/annaqzhou/INFO/Capstone/verdancy-client/src/Components/Search/ResultGroup.js"],"names":["React","Component","useState","Result","Row","CardDeck","Form","ResultGroup","constructor","props","editSearchTerm","e","setState","searchTerm","target","value","dynamicSearch","state","plants","filter","cur","PlantName","toLowerCase","includes","items","isLoaded","componentDidMount","response","fetch","then","res","json","result","render","map","item","PlantScientificName","Difficulty","ImageLink","PlantID"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,MAAR,QAAqB,UAArB;AACA,SAAQC,GAAR,EAAaC,QAAb,QAA4B,iBAA5B;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,OAAO,MAAMC,WAAN,SAA0BP,KAAK,CAACC,SAAhC,CAA0C;AAE7CO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAUnBC,cAVmB,GAUDC,CAAD,IAAO;AACpB,WAAKC,QAAL,CAAc;AAACC,QAAAA,UAAU,EAAEF,CAAC,CAACG,MAAF,CAASC;AAAtB,OAAd;AACH,KAZkB;;AAAA,SAcnBC,aAdmB,GAcH,MAAM;AAClB,aAAO,KAAKC,KAAL,CAAWC,MAAX,CAAkBC,MAAlB,CAAyBC,GAAG,IAAIA,GAAG,CAACC,SAAJ,CAAcC,WAAd,GAA4BC,QAA5B,CAAqC,KAAKN,KAAL,CAAWJ,UAAX,CAAsBS,WAAtB,EAArC,CAAhC,CAAP;AACH,KAhBkB;;AAEf,SAAKL,KAAL,GAAa;AACTO,MAAAA,KAAK,EAAE,KAAKf,KAAL,CAAWS,MADT;AAETA,MAAAA,MAAM,EAAE,EAFC;AAGTO,MAAAA,QAAQ,EAAE,KAHD;AAITZ,MAAAA,UAAU,EAAE;AAJH,KAAb;AAMH;;AAUDa,EAAAA,iBAAiB,GAAG;AAChB,UAAMC,QAAQ,GAAGC,KAAK,CAAC,oDAAD,CAAL,CACZC,IADY,CACPC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADA,EAEZF,IAFY,CAENG,MAAD,IAAY;AACd;AACA,WAAKpB,QAAL,CAAc;AAACM,QAAAA,MAAM,EAAEc,MAAT;AAAiBP,QAAAA,QAAQ,EAAE;AAA3B,OAAd;AACH,KALY,CAAjB;AAMH;;AAEDQ,EAAAA,MAAM,GAAG;AACL;AACA;AACA;AACA;AACA;AACI,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,6BACE;AAAK,QAAA,EAAE,EAAC,SAAR;AAAA,+BACI,QAAC,GAAD;AAAK,UAAA,SAAS,EAAC,QAAf;AAAA,oBAEM,KAAKhB,KAAL,CAAWC,MAAX,CAAkBgB,GAAlB,CAAsBC,IAAI,iBACtB,QAAC,MAAD;AAAQ,YAAA,KAAK,EAAEA,IAAI,CAACd,SAApB;AAA+B,YAAA,MAAM,EAAEc,IAAI,CAACC,mBAA5C;AACI,YAAA,UAAU,EAAED,IAAI,CAACE,UADrB;AACiC,YAAA,KAAK,EAAEF,IAAI,CAACG,SAD7C;AACwD,YAAA,EAAE,EAAEH,IAAI,CAACI;AADjE;AAAA;AAAA;AAAA;AAAA,kBADJ,CAFN,CAOK;AACC;;AARN;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADJ,CANC,CAuBO;AACf;;AArD4C","sourcesContent":["import React, {Component, useState} from 'react';\nimport {Result} from './Result';\nimport {Row, CardDeck} from 'react-bootstrap';\nimport Form from './Form';\n\nexport class ResultGroup extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            items: this.props.plants,\n            plants: [],\n            isLoaded: false,\n            searchTerm: ''\n        };\n    }\n\n    editSearchTerm = (e) => {\n        this.setState({searchTerm: e.target.value})\n    }\n    \n    dynamicSearch = () => {\n        return this.state.plants.filter(cur => cur.PlantName.toLowerCase().includes(this.state.searchTerm.toLowerCase()))\n    }\n\n    componentDidMount() {\n        const response = fetch(\"https://verdancy.capstone.ischool.uw.edu/v1/plants\")\n            .then(res => res.json())\n            .then((result) => {\n                // console.log(result);\n                this.setState({plants: result, isLoaded: true});\n            });\n    }\n\n    render() {\n        // if (!this.state.isLoaded) {\n        //     return (\n        //         <div>Loading...</div>\n        //     )\n        // } else {\n            return (\n                <div className=\"container\">\n                  <div id=\"results\">\n                      <Row className=\"db-row\">\n                          {\n                            this.state.plants.map(item => (\n                                <Result pName={item.PlantName} pSName={item.PlantScientificName}\n                                    difficulty={item.Difficulty} image={item.ImageLink} id={item.PlantID} />\n                            \n                            ))\n                           // .filter(d => d.PlantName.includes(this.state.searchMessage))\n                            // this.state.plants\n                          }\n                      </Row>\n                  </div>\n                </div>\n            )\n                    // }\n    }\n}\n"]},"metadata":{},"sourceType":"module"}