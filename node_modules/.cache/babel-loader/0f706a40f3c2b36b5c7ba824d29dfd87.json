{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amjjl\\\\OneDrive\\\\Documents\\\\College\\\\INFO Capstone\\\\verdancy-client\\\\src\\\\Components\\\\Search\\\\ResultGroup.js\";\nimport React, { Component, useState } from 'react';\nimport { Result } from './Result';\nimport { Row, CardDeck, InputGroup, FormControl, Button } from 'react-bootstrap';\nimport Form from './Form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class ResultGroup extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.editSearchTerm = e => {\n      this.setState({\n        searchTerm: e.target.value\n      }); // return this.state.stuff2.filter(cur => cu r.PlantName.toLowerCase().includes(this.state.searchTerm.toLowerCase()))\n    };\n\n    this.dynamicSearch = () => {\n      return this.state.plants.filter(cur => cur.PlantName.toLowerCase().includes(this.state.searchTerm.toLowerCase()));\n    };\n\n    this.state = {\n      items: this.props.plants,\n      plants: [],\n      isLoaded: false,\n      searchTerm: '',\n      stuff2: []\n    };\n  }\n\n  componentDidMount() {\n    const response = fetch(\"https://verdancy.capstone.ischool.uw.edu/v1/plants\").then(res => res.json()).then(result => {\n      // console.log(result);\n      let s = result.map(item => /*#__PURE__*/_jsxDEV(Result, {\n        pName: item.PlantName,\n        pSName: item.PlantScientificName,\n        difficulty: item.Difficulty,\n        image: item.ImageLink,\n        id: item.PlantID\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }, this));\n      this.setState({\n        plants: s,\n        isLoaded: true\n      });\n    });\n  }\n\n  render() {\n    // console.log(localStorage.getItem(\"ups\"))\n    if (!this.state.isLoaded) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 20\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"section\", {\n          id: \"search-bar\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(InputGroup, {\n                className: \"mb-3\",\n                onChange: this.editSearchTerm,\n                children: [/*#__PURE__*/_jsxDEV(FormControl, {\n                  placeholder: \"Enter vegetable name here\",\n                  \"aria-label\": \"plantName\",\n                  \"aria-describedby\": \"basic-addon2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 54,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(InputGroup.Append, {\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"outline-success\",\n                    children: \"search\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 60,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 59,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"results\",\n            children: /*#__PURE__*/_jsxDEV(Row, {\n              className: \"db-row\",\n              children: this.state.plants.filter(d => d.props.pName.toLowerCase().includes(this.state.searchTerm.toLowerCase()))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 27\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 23\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n}","map":{"version":3,"sources":["C:/Users/amjjl/OneDrive/Documents/College/INFO Capstone/verdancy-client/src/Components/Search/ResultGroup.js"],"names":["React","Component","useState","Result","Row","CardDeck","InputGroup","FormControl","Button","Form","ResultGroup","constructor","props","editSearchTerm","e","setState","searchTerm","target","value","dynamicSearch","state","plants","filter","cur","PlantName","toLowerCase","includes","items","isLoaded","stuff2","componentDidMount","response","fetch","then","res","json","result","s","map","item","PlantScientificName","Difficulty","ImageLink","PlantID","render","d","pName"],"mappings":"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","sourcesContent":["import React, {Component, useState} from 'react';\r\nimport {Result} from './Result';\r\nimport {Row, CardDeck, InputGroup, FormControl, Button} from 'react-bootstrap';\r\nimport Form from './Form';\r\n\r\nexport class ResultGroup extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            items: this.props.plants,\r\n            plants: [],\r\n            isLoaded: false,\r\n            searchTerm: '',\r\n            stuff2: []\r\n        };\r\n    }\r\n\r\n    editSearchTerm = (e) => {\r\n        this.setState({searchTerm: e.target.value});\r\n        // return this.state.stuff2.filter(cur => cu r.PlantName.toLowerCase().includes(this.state.searchTerm.toLowerCase()))\r\n    }\r\n\r\n    dynamicSearch = () => {\r\n        return this.state.plants.filter(cur => cur.PlantName.toLowerCase().includes(this.state.searchTerm.toLowerCase()))\r\n    }\r\n\r\n    componentDidMount() {\r\n        const response = fetch(\"https://verdancy.capstone.ischool.uw.edu/v1/plants\")\r\n            .then(res => res.json())\r\n            .then((result) => {\r\n                // console.log(result);\r\n                let s = result.map(item => (\r\n                    <Result pName={item.PlantName} pSName={item.PlantScientificName}\r\n                        difficulty={item.Difficulty} image={item.ImageLink} id={item.PlantID} />\r\n\r\n                ))\r\n                this.setState({plants: s, isLoaded: true});\r\n            })\r\n    }\r\n\r\n    render() {\r\n        // console.log(localStorage.getItem(\"ups\"))\r\n        if (!this.state.isLoaded) {\r\n            return <div>Loading...</div>\r\n        } else {\r\n            return (\r\n                <div>\r\n                    <section id=\"search-bar\">\r\n                        <div className=\"container\">\r\n                            <div>\r\n                                {/* <h2>search our plant database</h2> */}\r\n                                <InputGroup className=\"mb-3\" onChange={this.editSearchTerm}>\r\n                                    <FormControl\r\n                                        placeholder=\"Enter vegetable name here\"\r\n                                        aria-label=\"plantName\"\r\n                                        aria-describedby=\"basic-addon2\"\r\n                                        />\r\n                                    <InputGroup.Append>\r\n                                        <Button variant=\"outline-success\">search</Button>\r\n                                    </InputGroup.Append>\r\n                                </InputGroup>\r\n                            </div>\r\n                        </div>\r\n                    </section>\r\n                    <div className=\"container\">\r\n                      <div id=\"results\">\r\n                          <Row className=\"db-row\">\r\n                              {\r\n                                this.state.plants.filter(d => d.props.pName.toLowerCase().includes(this.state.searchTerm.toLowerCase()))\r\n                              }\r\n                          </Row>\r\n                      </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n                    }\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}