{"ast":null,"code":"var _jsxFileName = \"/Users/annaqzhou/INFO/Capstone/verdancy-client/src/Components/Search/ResultGroup.js\";\nimport React, { Component, useState } from 'react';\nimport { Result } from './Result';\nimport { Row, CardDeck } from 'react-bootstrap';\nimport Form from './Form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class ResultGroup extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.editSearchTerm = e => {\n      this.setState({\n        searchTerm: e.target.value\n      });\n      return this.state.stuff2.filter(cur => cur.PlantName.toLowerCase().includes(this.state.searchTerm.toLowerCase()));\n    };\n\n    this.dynamicSearch = () => {\n      return this.state.plants.filter(cur => cur.PlantName.toLowerCase().includes(this.state.searchTerm.toLowerCase()));\n    };\n\n    this.state = {\n      items: this.props.plants,\n      plants: [],\n      isLoaded: false,\n      searchTerm: '',\n      stuff2: []\n    };\n  }\n\n  componentDidMount() {\n    // const response = fetch(\"https://verdancy.capstone.ischool.uw.edu/v1/plants\")\n    //     .then(res => res.json())\n    //     .then((result) => {\n    //         // console.log(result);\n    //         let s = result.map(item => (\n    //             <Result pName={item.PlantName} pSName={item.PlantScientificName}\n    //                 difficulty={item.Difficulty} image={item.ImageLink} id={item.PlantID} />\n    //         ))\n    //         this.setState({stuff2: s, isLoaded: true});\n    //     })\n    this.setState({\n      plants: this.props.plants\n    });\n    let s = this.state.plants.map(item => /*#__PURE__*/_jsxDEV(Result, {\n      pName: item.PlantName,\n      pSName: item.PlantScientificName,\n      difficulty: item.Difficulty,\n      image: item.ImageLink,\n      id: item.PlantID\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this));\n    this.setState({\n      stuff2: s\n    });\n    console.log(s);\n  }\n\n  render() {\n    // if (!this.state.isLoaded) {\n    //     return (\n    //         <div>Loading...</div>\n    //     )\n    // console.log(this.state.searchTerm);\n    // } else {\n    const stuff = this.state.plants.map(item => /*#__PURE__*/_jsxDEV(Result, {\n      pName: item.PlantName,\n      pSName: item.PlantScientificName,\n      difficulty: item.Difficulty,\n      image: item.ImageLink,\n      id: item.PlantID\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)); // console.log(stuff)\n    // const other = this.state.stuff2.filter(d => d.PlantName.includes(this.state.searchTerm.toLowerCase()));\n    // console.log(other);\n    // console.log(other);\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: 'center',\n          paddingTop: '30vh'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: this.state.searchTerm,\n          onChange: this.editSearchTerm,\n          placeholder: \"Search for a name!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"results\",\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          className: \"db-row\",\n          children: this.state.stuff2 // other\n          // this.state.plants.map(item => (\n          //     <Result pName={item.PlantName} pSName={item.PlantScientificName}\n          //         difficulty={item.Difficulty} image={item.ImageLink} id={item.PlantID} />\n          // ))\n          // .filter(d => d.PlantName.includes(this.state.searchMessage))\n          // this.state.plants\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 23\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }, this); // }\n  }\n\n}","map":{"version":3,"sources":["/Users/annaqzhou/INFO/Capstone/verdancy-client/src/Components/Search/ResultGroup.js"],"names":["React","Component","useState","Result","Row","CardDeck","Form","ResultGroup","constructor","props","editSearchTerm","e","setState","searchTerm","target","value","state","stuff2","filter","cur","PlantName","toLowerCase","includes","dynamicSearch","plants","items","isLoaded","componentDidMount","s","map","item","PlantScientificName","Difficulty","ImageLink","PlantID","console","log","render","stuff","textAlign","paddingTop"],"mappings":"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","sourcesContent":["import React, {Component, useState} from 'react';\nimport {Result} from './Result';\nimport {Row, CardDeck} from 'react-bootstrap';\nimport Form from './Form';\n\nexport class ResultGroup extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            items: this.props.plants,\n            plants: [],\n            isLoaded: false,\n            searchTerm: '',\n            stuff2: []\n        };\n    }\n\n    editSearchTerm = (e) => {\n        this.setState({searchTerm: e.target.value});\n        return this.state.stuff2.filter(cur => cur.PlantName.toLowerCase().includes(this.state.searchTerm.toLowerCase()))\n    }\n    \n    dynamicSearch = () => {\n        return this.state.plants.filter(cur => cur.PlantName.toLowerCase().includes(this.state.searchTerm.toLowerCase()))\n    }\n\n    componentDidMount() {\n        // const response = fetch(\"https://verdancy.capstone.ischool.uw.edu/v1/plants\")\n        //     .then(res => res.json())\n        //     .then((result) => {\n        //         // console.log(result);\n        //         let s = result.map(item => (\n        //             <Result pName={item.PlantName} pSName={item.PlantScientificName}\n        //                 difficulty={item.Difficulty} image={item.ImageLink} id={item.PlantID} />\n                \n        //         ))\n        //         this.setState({stuff2: s, isLoaded: true});\n        //     })\n        this.setState({plants: this.props.plants});\n        let s = this.state.plants.map(item => (\n            <Result pName={item.PlantName} pSName={item.PlantScientificName}\n                        difficulty={item.Difficulty} image={item.ImageLink} id={item.PlantID} />\n        ))\n        this.setState({stuff2: s});\n        console.log(s)\n    }\n\n    render() {\n        // if (!this.state.isLoaded) {\n        //     return (\n        //         <div>Loading...</div>\n        //     )\n        // console.log(this.state.searchTerm);\n        // } else {\n\n        const stuff = this.state.plants.map(item => (\n            <Result pName={item.PlantName} pSName={item.PlantScientificName}\n                difficulty={item.Difficulty} image={item.ImageLink} id={item.PlantID} />\n        \n        ));\n        // console.log(stuff)\n        // const other = this.state.stuff2.filter(d => d.PlantName.includes(this.state.searchTerm.toLowerCase()));\n        // console.log(other);\n\n        // console.log(other);\n\n            return (\n                <div className=\"container\">\n                    <div style = {{textAlign: 'center', paddingTop: '30vh'}}>\n                        <input type= 'text' value = {this.state.searchTerm} onChange = {this.editSearchTerm} placeholder = 'Search for a name!'/>\n                        <br></br>\n                        {/* <h3>These are the important names:</h3>\n                        <NamesContainer names = {this.dynamicSearch()}/> */}\n                    </div>\n                  <div id=\"results\">\n                      <Row className=\"db-row\">\n                          {\n                              this.state.stuff2\n                            // other\n                            // this.state.plants.map(item => (\n                            //     <Result pName={item.PlantName} pSName={item.PlantScientificName}\n                            //         difficulty={item.Difficulty} image={item.ImageLink} id={item.PlantID} />\n                            \n                            // ))\n                           // .filter(d => d.PlantName.includes(this.state.searchMessage))\n                            // this.state.plants\n                          }\n                      </Row>\n                  </div>\n                </div>\n            )\n                    // }\n    }\n}\n"]},"metadata":{},"sourceType":"module"}