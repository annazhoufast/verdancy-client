{"version":3,"sources":["logo.svg","Components/HomePage/TitleCard.js","Components/HomePage/Background.js","Components/HomePage/IndividualSteps.js","Components/HomePage/Steps.js","Components/HomePage/IndividualTeam.js","Components/HomePage/Team.js","Components/HomePage/Home.js","Components/Advice/AdviceCard.js","Components/Advice/AdviceCardGroup.js","Components/Advice/Advice.js","Components/Emissions/EmissionsTitle.js","Components/Emissions/Conversions.js","Components/Emissions/IndividualConversion.js","Components/Emissions/Breakdown.js","Components/Emissions/Emissions.js","Components/Garden/Plant.js","Components/Garden/PlantGroup.js","Components/Garden/Garden.js","Components/SinglePlant/SinglePlant.js","Components/Search/Result.js","Components/Search/ResultGroup.js","Components/Search/Form.js","Components/Search/SearchBar.js","Components/Search/Search.js","Components/Auth/Components/SignForm/SignForm.js","Constants/APIEndpoints/APIEndpoints.js","Components/Errors/Errors.js","Constants/PageTypes/PageTypes.js","Components/Auth/Components/SignUp/SignUp.js","Components/Auth/Components/SignIn/SignIn.js","Components/Auth/Components/PleaseSIgnIn.js","Components/Auth/Components/ForgotPassword/ForgotPassword.js","Components/Main/Components/SignOutButton/SignOutButton.js","App.js","reportWebVitals.js","index.js"],"names":["TitleCard","id","className","Row","Button","to","React","Component","Background","src","alt","IndividualSteps","Col","lg","this","props","img","title","description","Steps","steps","require","s","i","length","push","Img","Alt","Title","Descr","IndividualTeam","pfp","prpAlt","name","role","Team","teamData","ppl","Name","Role","Home","AdviceCard","onMouseEnter","setState","cardContent","onMouseOut","state","Card","AdviceCardGroup","cards","Advice","EmissionsTitle","console","log","totalEm","emissions","Conversions","miles","Math","round","plastic","water","Breakdown","Emissions","error","isLoaded","auth","localStorage","getItem","fetch","method","headers","Headers","then","res","json","result","Plant","updateQ","quant","updatePlantQuantity","e","a","preventDefault","sendData","Quantity","authHeader","pID","body","JSON","stringify","response","status","text","newTotal","total","newCarbon","co2","lgShow","totalCO2","quantity","totCarbon","Container","pName","onClick","block","Modal","size","show","onHide","aria-labelledby","Header","closeButton","Body","min","value","onChange","map","type","Check","label","PlantGroup","items","stuff","plants","ImageLink","PlantName","Total","TotalCO2","PlantID","CO2PerUnit","message","Garden","SinglePlant","addToGarden","inGarden","variant","Difficulty","ZoneStart","ZoneEnd","Height","Watering","Sun","Soil","WhenToPlant","Feeding","Transplanting","Spacing","Harvesting","ImageLink2","withRouter","Result","plantLink","linkToPlant","history","md","xs","image","icon","faCheck","Text","pSName","difficulty","ResultGroup","item","PlantScientificName","SearchBar","InputGroup","handleOnInputChange","FormControl","placeholder","aria-label","aria-describedby","Append","Search","SignForm","setField","submitForm","values","fields","onSubmit","d","key","users","myuser","sessions","sessionsMine","resetPasscode","passwords","Errors","setError","SignUp","target","email","password","passwordConf","firstName","lastName","api","authToken","get","setItem","setAuthToken","user","setUser","SignIn","PleaseSignIn","SignOutButton","useState","removeItem","App","getCurrentUser","alert","setPageToSignIn","page","PageTypes","setPageToSignUp","setPage","singlePlants","userPlants","cur","exact","path","basename","process","Navbar","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.10779ec6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, {Component} from 'react';\nimport {\n    HashRouter as Router,\n    Switch,\n    Route,\n    Link\n} from 'react-router-dom';\nimport {Navbar, Nav, Button} from 'react-bootstrap';\nimport {Row, Container} from \"react-bootstrap\";\n\nexport class TitleCard extends React.Component {\n    render() {\n      return (\n          <section id=\"home-background\">\n            <div className=\"container\">\n              <Row>\n                <div>\n                  <div id=\"main-title\">\n                    <h1>verdancy</h1>\n                    <h2>[vər-​dᵊn(t)-​sē] <i>noun</i></h2>\n                    <h2>1. <span className=\"green-text\"><b>green</b></span> with vegetation</h2>\n                  </div>\n                  <br />\n                  <div id=\"title-desc\">\n                    <p>Go <span className=\"green-text\"><b>green</b></span> with us. Reduce your\n                    carbon footprint with home gardening!</p>\n                  </div>\n                  <br />\n                  <Button className=\"cream-button\">\n                    <Link to=\"/search\" className=\"link\">Search our vegetables</Link>\n                  </Button>\n                </div>\n                {/* image will go here */}\n              </Row>\n            </div>\n          </section>\n      )\n    }\n}\n","import React, {Component} from 'react';\nimport {Row, Container} from \"react-bootstrap\";\n\nexport class Background extends React.Component {\n    render() {\n      return (\n          <section>\n            <div className=\"container\">\n              <Row>\n                <div id=\"background-desc\" className=\"left-stuff\">\n                  <h2>the background</h2>\n                  <br />\n                  <p>\n                    <span className=\"background-num\">8% </span>of personal carbon footprint comes from food. That's around\n                    <span className=\"background-num\"> 720 lbs </span> a year!\n                  </p>\n                  <p>\n                    At Verdancy, we believe small changes lead to big impacts. The small act of growing your own vegetables\n                    through home gardening can drastically reduce your carbon footprint. Let us show you how!\n                  </p>\n                </div>\n                <img src=\"https://raw.githubusercontent.com/annazhoufast/plantastic/main/client/src/imgs/home/footprint.png?token=AKMRZNWA7655LQQWV53PJ6TASSLNI\"\n                alt=\"carbon footprint illustration\" id=\"background-img\"/>\n              </Row>\n            </div>\n          </section>\n      )\n    }\n}\n","import React, {Component} from 'react';\nimport {Col} from 'react-bootstrap';\n\nexport class IndividualSteps extends React.Component {\n    render() {\n        return (\n            <Col lg={4} className=\"centered\">\n                <img src={this.props.img} alt={this.props.alt} className=\"individ-step\"/>\n                <br/>\n                <br/>\n                <h3>{this.props.title}</h3>\n                <div className=\"individ-step\">\n                  <br/>\n                  <p>{this.props.description}</p>\n                </div>\n            </Col>\n        )\n    }\n}\n","import React, {Component} from 'react';\nimport {Row, Container} from 'react-bootstrap';\nimport {IndividualSteps} from \"./IndividualSteps\";\n\n\nexport class Steps extends React.Component {\n    render() {\n        var steps = require(\"../../data/homeSteps.json\");\n        let s = [];\n        for (let i = 0; i < steps.length; i++) {\n            s.push(\n                <IndividualSteps img={steps[i].Img}\n                                alt={steps[i].Alt}\n                                title={steps[i].Title}\n                                description={steps[i].Descr} />\n            );\n        }\n\n        return (\n            <section className=\"green-background\">\n              <div className=\"container\">\n                <Row>\n                  <div>\n                    <h2>three easy steps</h2>\n                    <br />\n                    <Row>\n                        {s}\n                    </Row>\n                  </div>\n                </Row>\n              </div>\n            </section>\n        )\n    }\n}\n","import React, {Component, useState} from 'react';\nimport {Col} from \"react-bootstrap\";\n\nexport class IndividualTeam extends React.Component {\n    render() {\n        return (\n            <Col lg={3} className=\"centered\">\n                <img src={this.props.pfp} alt={this.props.prpAlt} id=\"team-img\" />\n                <br />\n                <br />\n                <p><b>{this.props.name}</b></p>\n                <p>{this.props.role}</p>\n            </Col>\n        )\n    }\n}\n","import React, {Component} from 'react';\nimport {IndividualTeam} from './IndividualTeam.js';\nimport {Row, Container} from \"react-bootstrap\";\n\nexport class Team extends React.Component {\n    render() {\n        var teamData = require(\"../../data/team.json\");\n        let ppl = [];\n        for (let i = 0; i < teamData.length; i++) {\n            ppl.push(<IndividualTeam pfp={teamData[i].Img}\n                                        alt={teamData[i].Alt}\n                                        name={teamData[i].Name}\n                                        role={teamData[i].Role} />\n                    );\n        }\n\n        return (\n            <section>\n              <div className=\"container\">\n                <Row>\n                  <div>\n                    <h2>meet the team</h2>\n                    <br />\n                    <Row>\n                        {ppl}\n                    </Row>\n                  </div>\n                </Row>\n              </div>\n            </section>\n        )\n    }\n}\n","import React, {Component} from 'react';\nimport {TitleCard} from './TitleCard';\nimport {Background} from './Background';\nimport {Steps} from './Steps';\nimport {Team} from './Team';\n\nexport class Home extends React.Component {\n    render() {\n        return (\n            <body>\n\n              <TitleCard />\n              <Background />\n              <Steps />\n              <Team />\n\n            </body>\n        )\n    }\n}\n","import React, {Component} from 'react';\nimport {Card} from 'react-bootstrap';\n\nexport class AdviceCard extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            cardContent: \"hello i am a card\"\n        };\n    }\n\n    render() {\n        return (\n            <Card className=\"cream-background centered\" id=\"advice-card\"\n            onMouseEnter={() => {this.onMouseEnter();}} onMouseOut={() => {this.onMouseOut();}}>\n                <h3 id=\"adviceTitle\">{this.state.cardContent}</h3>\n            </Card>\n        )\n    }\n\n    onMouseEnter= () => {\n        this.setState({\n          cardContent: \"advice wow\"\n        })\n    }\n\n    onMouseOut= () => {\n        this.setState({\n          cardContent: \"hello i am a card\"\n        })\n    }\n}\n","import React, {Component} from 'react';\nimport {AdviceCard} from './AdviceCard.js';\nimport {Row, Container} from 'react-bootstrap';\n\nexport class AdviceCardGroup extends React.Component {\n    render() {\n        // create the cards here\n        let cards = [];\n        for (let i = 0; i < 6; i++) {\n            cards.push(<AdviceCard/>)\n        }\n        return(\n            <div>\n                <Row id=\"advice-row\">\n                  {cards}\n                </Row>\n            </div>\n        )\n    }\n}\n","import React, {Component} from 'react';\nimport {AdviceCardGroup} from './AdviceCardGroup';\n\nexport class Advice extends React.Component {\n    render() {\n        return (\n          <section>\n            <div className=\"container\">\n              <div>\n                  <div className=\"content-header\">\n                    <h2>new to gardening?</h2>\n                    <p>We've got you covered with some beginner's gardening tips.</p>\n                    <p>Hover over an advice card to learn more!</p>\n                  </div>\n                  <AdviceCardGroup/>\n              </div>\n            </div>\n          </section>\n        )\n    }\n}\n","import React, {Component, useState} from 'react';\nimport {Row, Container} from \"react-bootstrap\";\n\nexport class EmissionsTitle extends React.Component {\n\n    render() {\n        console.log(this.props.totalEm);\n        return (\n          <section className=\"green-background\">\n            <div className=\"container\">\n              <Row>\n                <div className=\"left-stuff\">\n                    <div className=\"content-header\">\n                      <h2>my emissions</h2>\n                    </div>\n                    <h1 id=\"emissions-num\">{this.props.emissions}<span className=\"medium-text\"> g <span className=\"darkgreen-text\">CO2e saved</span></span></h1>\n                </div>\n                <img src=\"https://raw.githubusercontent.com/annazhoufast/plantastic/main/client/src/imgs/emissions/emissions.png?token=AKMRZNVM4NTROVTZO5U7IMTASSJGC\"\n                alt=\"woman holding up a globe\" id=\"emissions-img\"/>\n              </Row>\n            </div>\n          </section>\n        )\n    }\n}\n","import React, {Component} from 'react';\nimport {Row, Container} from \"react-bootstrap\";\nimport {IndividualConversion} from \"./IndividualConversion.js\";\n\nexport class Conversions extends React.Component {\n    render() {\n\n      // using IndividualConversion component\n      {/*\n        const convRates = [0.0024813, 0.000869565217, 0.76794186];\n        const emissions = this.props.emissions;\n        let b = [];\n        for (let i = 0; i < 3; i++) {\n            // Math.round((numb + Number.EPSILON) * 100) / 100;\n            let conv = Math.round(convRates[i] * emissions * 100) / 100;\n            b.push(<IndividualConversion savings={conv} />);\n        }\n        */}\n\n        const emissions = this.props.emissions;\n        const mileRate = 0.0024813;\n        const plasticRate = 0.000869565217;\n        const waterRate = .76794186;\n        let miles = Math.round(mileRate * emissions * 100) / 100;\n        let plastic = Math.round(plasticRate * emissions * 100) / 100;\n        let water = Math.round(waterRate * emissions * 100) / 100;\n\n        return (\n          <section>\n            <div className=\"container\">\n              <Row>\n                <div className=\"centered\">\n                  <h3 className=\"centered emissions-header\">Let’s break this down! Saving {emissions} g CO2e is the same as saving...</h3>\n                  <Row>\n                      <div className=\"conversion centered\">\n                          <img src=\"https://raw.githubusercontent.com/annazhoufast/plantastic/main/client/src/imgs/emissions/car.png?token=AKMRZNWKOADR3IREWMNCC6TASTFLK\"\n                          alt=\"car icon\" className=\"individ-step\"/>\n                          <p className=\"conversion-num\">{miles} miles</p>\n                          <p>driven by a car</p>\n                      </div>\n                      <div className=\"conversion centered\">\n                          <img src=\"https://raw.githubusercontent.com/annazhoufast/plantastic/main/client/src/imgs/emissions/plastic.png?token=AKMRZNSZ4NFFMHK3VTYPO6LASTFRQ\"\n                          alt=\"plastic icon\" className=\"individ-step\"/>\n                          <p className=\"conversion-num\">{plastic} lbs</p>\n                          <p>of plastic saved</p>\n                      </div>\n                      <div className=\"conversion centered\">\n                          <img src=\"https://raw.githubusercontent.com/annazhoufast/plantastic/main/client/src/imgs/emissions/water.png?token=AKMRZNRF54GF2ALQRH735I3ASTFSI\"\n                          alt=\"water icon\" className=\"individ-step\"/>\n                          <p className=\"conversion-num\">{water} gal</p>\n                          <p>of water saved</p>\n                      </div>\n                  </Row>\n                </div>\n              </Row>\n            </div>\n          </section>\n        )\n    }\n}\n","import React, {Component} from 'react';\n\nexport class IndividualConversion extends React.Component {\n    render() {\n        return (\n            <div>\n                <h3>Save {this.props.savings} miles driven by a passenger car</h3>\n            </div>\n        )\n    }\n}\n","import React, {Component} from 'react';\n\nexport class Breakdown extends React.Component {\n    render() {\n        return (\n          <section className=\"green-background\">\n            <div className=\"container\">\n              <div className=\"centered\">\n                <h3 className=\"centered emissions-header\">Plantastic! Let's take a look at the emissions that were saved by each vegetable...</h3>\n              </div>\n            </div>\n          </section>\n        )\n    }\n}\n","import React, {Component, useState} from 'react';\nimport {EmissionsTitle} from './EmissionsTitle';\nimport {Conversions} from './Conversions';\nimport {Breakdown} from './Breakdown';\n\nexport class Emissions extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            error: null,\n            isLoaded: false,\n            totalEm: 0,\n            auth: localStorage.getItem(\"Authorization\")\n        }\n    }\n\n    componentDidMount() {\n        fetch(\"https://verdancy.capstone.ischool.uw.edu/v1/emissions/\", {\n            method: 'GET',\n            headers: new Headers({\n                'Authorization': this.state.auth\n            })\n        })\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    this.setState({\n                        isLoaded: true,\n                        totalEm: result.Emissions\n                    });\n                },\n                (error) => {\n                    this.setState({\n                        isLoaded: true,\n                        error\n                    });\n                }\n            )\n    }\n\n    render() {\n        return (\n            <body>\n\n              <EmissionsTitle emissions={this.state.totalEm} />\n              <Conversions emissions={this.state.totalEm} />\n              <Breakdown />\n\n            </body>\n        )\n    }\n}\n","import React, {Component, useState} from 'react';\nimport {Card, Button, Row, Col, Modal, Form, Container} from 'react-bootstrap';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport NumericInput from 'react-numeric-input';\n\n\n// export class Plant extends React.Component {\n\n// function updateQuant(quant) {\n//     this.setState({quant});\n// }\n\n// function Plant(props) {\nclass Plant extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            lgShow: false,\n            quant: 0,\n            auth: localStorage.getItem(\"Authorization\"),\n            total: this.props.quantity,\n            co2: this.props.co2,\n            totalCO2: this.props.totCarbon\n        }\n    }\n    updateQ = quant => this.setState({ quant: quant });\n    \n    updatePlantQuantity = async (e) => {\n        e.preventDefault();\n        console.log(\"hello\");\n        // this.setState({lgShow: false});\n        const {quant} = this.state;\n        console.log(quant);\n        // const auth = localStorage.getItem(\"Authorization\");\n        const sendData = {\n            Quantity: quant\n        };\n        console.log(this.props.authHeader);\n        console.log(this.props.pID);\n        const response = await fetch(\"https://verdancy.capstone.ischool.uw.edu/v1/UserPlants/\" + this.props.pID, {\n            method: \"POST\",\n            body: JSON.stringify(sendData),\n            headers: new Headers({\n                \"Authorization\": this.state.auth,\n                \"Content-Type\": \"application/json\"\n            })\n        });\n        if (response.status > 201) {\n            const error = response.text();\n            // this.setState({error:}));\n            console.log(error);\n            return;\n        }\n        let newTotal = this.state.total + quant;\n        let newCarbon = this.state.co2 * newTotal;\n        this.setState({\n            lgShow: false,\n            total: newTotal,\n            totalCO2: newCarbon\n\n        });\n        // window.location.reload(true);\n        const respMessage = await response.body;\n        console.log(quant);\n        console.log(response);\n    }\n\n    componentDidUpdate() {\n        // this.updatePlantQuantity()\n    }\n\n    render() {\n        console.log(this.state.quant)\n    return (\n        <Col lg={6} className=\"harvest-card\">\n            <Container className=\"outline\">\n                <Row>\n                    <Col lg={5}>\n                        <img src=\"https://raw.githubusercontent.com/annazhoufast/plantastic/main/data/imgs/tomatoe.png?token=ALLXA25BKVLL7A7AEQS3W3LASHPF6\"\n                            alt=\"drawing of plant\" className=\"garden-img\" />\n                    </Col>\n                    <Col lg={7} className=\"harvest\">\n                        <h4>\n                            <b>{this.props.pName}</b>\n                        </h4>\n                        <p>Harvest Total</p>\n                        {/* <p>{this.props.quantity}</p> */}\n                        <p>{this.state.total}</p>\n                        <p>Carbon Emissions Saved</p>\n                        {/* <p>{this.props.totCarbon} g</p> */}\n                        <p>{this.state.totalCO2} g CO2</p>\n                        <Button onClick={() => this.setState({lgShow: true})} block className=\"green-btn\">Harvest!</Button>\n                        <Modal\n                            size=\"lg\"\n                            show={this.state.lgShow}\n                            onHide={() => this.setState({lgShow: false})}\n                            aria-labelledby=\"example-modal-sizes-title-lg\"\n                        >\n                            <Modal.Header closeButton></Modal.Header>\n                            <Modal.Body>\n                                <Container>\n                                    <Row>\n                                        <Col>\n                                            <p>How much {this.props.pName} did you harvest?</p>\n                                        </Col>\n                                        <Col>\n                                            <NumericInput min={0} value={this.state.quant} onChange={this.updateQ} />\n                                            <p>{this.state.quant}</p>\n                                        </Col>\n                                    </Row>\n                                    <Form>\n                                        {['checkbox'].map((type) => (\n                                            <div key={`default-`} className=\"mb-3\">\n                                                <Form.Check\n                                                    type={type}\n                                                    id={`default-`}\n                                                    label={`add to your emissions total?`}\n                                                />\n                                            </div>\n                                        ))}\n                                    </Form>\n                                    <Button className=\"green-btn\" size=\"lg\" onClick={(e) => this.updatePlantQuantity(e)}>Confirm</Button>\n                                </Container>\n                            </Modal.Body>\n                        </Modal>\n                    </Col>\n                </Row>\n            </Container>\n        </Col>\n    )\n                                        }\n}\nexport default Plant;\n","import React, {Component, useState} from 'react';\nimport Plant from \"./Plant\";\nimport {Row} from 'react-bootstrap';\n\nexport class PlantGroup extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            error: null,\n            isLoaded: false,\n            items: [],\n            // items: this.props.plants,\n            stuff: this.props.stuff,\n            auth: localStorage.getItem(\"Authorization\")\n        }\n    }\n\n    componentDidMount() {\n        fetch(\"https://verdancy.capstone.ischool.uw.edu/v1/UserPlants/\", {\n            method: 'GET',\n            headers: new Headers({\n                'Authorization': this.state.auth\n            })\n        })\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    this.setState({\n                        isLoaded: true,\n                        items: result\n                    });\n                },\n                (error) => {\n                    this.setState({\n                        isLoaded: true,\n                        error\n                    });\n                }\n            )\n    }\n\n    render() {\n        const {error, isLoaded, items} = this.state;\n        // console.log(this.props.plants);\n        console.log(this.state.stuff)\n        // console.log(this.state.auth)\n        let plants = [];\n        \n        for (let i = 0; i < this.state.items.length; i++) {\n            // plants.push(<Plant img={this.state.stuff[i].ImageLink}\n            //                     pName={this.state.stuff[i].PlantName}\n            //                     quantity={this.state.stuff[i].Total}\n            //                     totCarbon={this.state.stuff[i].TotalCO2}\n            //                     pID={this.state.stuff[i].PlantID} />);\n            plants.push(<Plant img={this.state.items[i].ImageLink}\n                            pName={this.state.items[i].PlantName}\n                            quantity={this.state.items[i].Total}\n                            totCarbon={this.state.items[i].TotalCO2}\n                            pID={this.state.items[i].PlantID} \n                            co2={this.state.items[i].CO2PerUnit} />);\n        }\n        if (this.state.error) {\n            return <div>Error: {this.state.error.message}</div>\n        } else if (!this.state.isLoaded) {\n            return <div>Loading...</div>\n        } else {\n            return (\n                <div>\n                    <Row>\n                        {plants}\n                    </Row>\n                </div>\n            )\n        }\n        // return (\n        //     <div>\n        //         <Row>\n        //             {plants}\n        //         </Row>\n        //     </div>\n        // )\n    }\n}","import React, {Component} from 'react';\nimport {PlantGroup} from './PlantGroup';\nimport {Button, Row, Col} from 'react-bootstrap';\nimport {Link} from 'react-router-dom';\n\nexport class Garden extends React.Component {\n    render() {\n        return (\n            <div className=\"search\">\n                <Row>\n                    <Col>\n                        <h1>my garden</h1>\n                    </Col>\n                    <Col className=\"add-more\">\n                        <Link to=\"/search\">\n                            <Button className=\"green-btn add-button\" size=\"lg\">+ add more plants</Button>\n                        </Link>\n                    </Col>\n                </Row>\n                <p>Be sure to log your harvest activity when you're ready to eat your produce!</p>\n                <PlantGroup stuff={this.props.plants} />\n            </div>\n        )\n    }\n}","import React, {Component, useState} from 'react';\nimport {Container, Row, Col, Button} from 'react-bootstrap';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport PropTypes from 'prop-types';\nimport {withRouter, useLocation} from 'react-router-dom';\nimport { createBrowserHistory } from 'history';\n\n\n\n\n\nexport class SinglePlant extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            error: null,\n            isLoaded: false,\n            items: {},\n            auth: localStorage.getItem(\"Authorization\"),\n            id: this.props.id\n        };\n        \n    }\n\n    componentDidMount() {\n        const response = fetch(\"https://verdancy.capstone.ischool.uw.edu/v1/plants/\" + this.state.id)\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    this.setState({\n                        isLoaded: true,\n                        items: result\n                    });\n                },\n                (error) => {\n                    this.setState({\n                        isLoaded: true,\n                        error\n                    });\n                }\n            );\n        console.log(response);\n    }\n\n    addToGarden = (e) => {\n        e.preventDefault();\n        console.log(this.props.id);\n        const response = fetch(\"https://verdancy.capstone.ischool.uw.edu/v1/AddPlants/\" + this.state.id, {\n            method: \"POST\",\n            headers: new Headers({\n                \"Authorization\": this.state.auth\n            })\n        });\n        if (response.status > 201) {\n            const error = response.text();\n            console.log(error);\n            return;\n        }\n        this.setState({inGarden: true});\n        console.log(response);\n    }\n\n    render() {\n        \n\n        const {error, isLoaded, items} = this.state;\n        if (error) {\n            return <div>Error: {error.message}</div>;\n        } else if (!isLoaded) {\n            return <div>Loading...</div>;\n        } else {\n            return(\n                <div className=\"pad-top\">\n                    <Container>\n                        <Row>\n                            <Col>\n                                <h1 className=\"plant-name\">{items.PlantName}</h1>\n                            </Col>\n                            <Col className=\"add\">\n                                {this.state.auth ? \n                                    <Button variant=\"primary\" size=\"lg\" className=\"add-button green-btn\" onClick={this.addToGarden}>+ add to garden</Button>\n                                        :\n                                    <div />\n                                }\n                                \n                            </Col>\n                        </Row>\n                        <Row>\n                            <p className=\"darkgreen-text\">{items.CO2PerUnit} g CO2e saved per tomato | Gardening Difficulty: {items.Difficulty} | Zones: {items.ZoneStart} - {items.ZoneEnd} | Height: {items.Height}</p>\n                        </Row>\n                    </Container>\n\n                    <Container>\n                        <Row>\n                            <Col lg={7}>\n                                <p className=\"font-size-14\">{items.Descr}</p>\n                                {/* <p>Height: {items.Height}</p> */}\n                                <h3>Plant Care</h3>\n                                <hr className=\"line\"></hr>\n                                <Container>\n                                    <Row>\n                                        <p className=\"font-size-14\">Watering: {items.Watering} </p>\n                                    </Row>\n                                    <Row>\n                                        <p className=\"font-size-14\">Sunlight: {items.Sun} </p>\n                                    </Row>\n                                    <Row>\n                                        <p className=\"font-size-14\">Soil: {items.Soil} </p>\n                                    </Row>\n                                    <Row>\n                                        <p className=\"font-size-14\">Timing: {items.WhenToPlant} </p>\n                                    </Row>\n                                    <Row>\n                                        <p className=\"font-size-14\">Feeding: {items.Feeding} </p>\n                                    </Row>\n                                    <Row>\n                                        <p className=\"font-size-14\">Transplanting: {items.Transplanting} </p>\n                                    </Row>\n                                    <Row>\n                                        <p className=\"font-size-14\">Spacing: {items.Spacing} </p>\n                                    </Row>\n                                    <Row>\n                                        <p className=\"font-size-14\">Harvesting: {items.Harvesting} </p>\n                                    </Row>\n                                </Container>\n                            </Col>\n                            <Col lg={5}>\n                                <img src={items.ImageLink2} alt=\"pic of plant\" className=\"img-100\" />\n                                \n                            </Col>\n                        </Row>\n                    </Container>\n                </div>\n            )\n        }\n    }\n}\n\nconst ShowTheLocationWithRouter = withRouter(SinglePlant);","import React, {Component, useState} from 'react';\nimport {Card, Col, Button} from 'react-bootstrap';\nimport {Link, Route} from 'react-router-dom';\nimport { withRouter } from \"react-router\";\nimport {SinglePlant} from '../SinglePlant/SinglePlant';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCheck, faChessKing } from '@fortawesome/free-solid-svg-icons'\n\nexport class Result extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            plantLink: \"https://verdancy.capstone.ischool.uw.edu/v1/plants/\" + this.props.id,\n            auth: localStorage.getItem(\"Authorization\"),\n            inGarden: false\n        }\n    }\n\n    render() {\n\n        const addToGarden = (e) => {\n            e.preventDefault();\n            console.log(this.props.id);\n            const response = fetch(\"https://verdancy.capstone.ischool.uw.edu/v1/AddPlants/\" + this.props.id, {\n                method: \"POST\",\n                headers: new Headers({\n                    \"Authorization\": this.state.auth\n                })\n            });\n            if (response.status > 201) {\n                const error = response.text();\n                console.log(error);\n                return;\n            }\n            this.setState({inGarden: true});\n            console.log(response);\n        }\n\n        const specificLink = \"https://verdancy.capstone.ischool.uw.edu/v1/plants/\" + this.props.id;\n        const linkToPlant = \"/plant/\" + this.props.id;\n        const {history} = this.props;\n        return (\n            <Col md={4} xs={12} className=\"db-plant\">\n                <Card className=\"card\">\n                    <div>\n                        <Card.Img variant=\"top\" src={this.props.image} className=\"full-img\" />\n                        {/* COME BACK AND DEAL W/ THIS */}\n                        {this.state.auth !== null ? <Button variant=\"outline-success\" onClick={addToGarden}>+</Button>: <div/>}\n                        <Button variant=\"success\">\n                            <FontAwesomeIcon icon={faCheck} />\n                        </Button>\n                    </div>\n                    <Card.Body>\n                        <Card.Title>\n                            <Link to={linkToPlant}>\n                                <h3>{this.props.pName}</h3>\n                            </Link>\n                        </Card.Title>\n                        <Card.Text>\n                            <i>{this.props.pSName}</i>\n                            <br/>\n                            Difficulty: {this.props.difficulty}\n                        </Card.Text>\n                    </Card.Body>\n                </Card>\n            </Col>\n        )\n    }\n}","import React, {Component, useState} from 'react';\nimport {Result} from './Result';\nimport {Row, CardDeck} from 'react-bootstrap';\nimport Form from './Form';\n\nexport class ResultGroup extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            items: this.props.plants,\n            plants: [],\n            isLoaded: false\n        };\n    }\n\n    componentDidMount() {\n        const response = fetch(\"https://verdancy.capstone.ischool.uw.edu/v1/plants\")\n            .then(res => res.json())\n            .then((result) => {\n                console.log(result);\n                this.setState({plants: result, isLoaded: true});\n                // result.map(cur => (\n                //     this.state.singlePlants.push(\n                //         // <Route exact path={`/plant/${cur.PlantID}`}>\n                //         //     <SinglePlant id={cur.PlantID}/>\n                //         // </Route>\n                //     )\n                // ));\n            });\n    }\n\n    render() {\n\n        if (!this.state.isLoaded) {\n            return (\n                <div>Loading...</div>\n            )\n        } else {\n            return (\n            <div>\n                <Row className=\"db-row\">\n                    {this.state.plants.map(item => (\n                        <Result pName={item.PlantName} pSName={item.PlantScientificName}\n                            difficulty={item.Difficulty} image={item.ImageLink} id={item.PlantID} />\n                    ))}\n                </Row>\n            </div>\n            )\n                    }\n    }\n}\n","import React from 'react';\n\nclass Form extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            inputValue: \"\"\n        };\n    }\n\n    render = () => {\n        return (\n            <form\n                onSubmit={(e) => {\n                    e.preventDefault();\n                    this.props.onSubmit(this.state.inputValue);\n                }}\n            >\n                <input\n                    type=\"text\"\n                    placeholder={this.props.placeholderText}\n                    onChange={(e) => {\n                        var value = e.target.value;\n                        this.setState({\n                            inputValue: value\n                        });\n                    }}\n                />\n                <button type=\"submit\">Search</button>\n            </form>\n        );\n    }\n}\n\nexport default Form;\n","import React, {Component} from 'react';\nimport {InputGroup, FormControl, Button, Container, Row, Col} from 'react-bootstrap';\nimport axios from 'axios';\n\n\nexport class SearchBar extends React.Component {\n    render() {\n        const handleOnInputChange = (event) => {\n            const query = event.target.value;\n                    this.setState({ query, loading: true, message: ''  } );\n        };\n        return(\n            <div className=\"searchbar\">\n                <h1>search our plant database</h1>\n                <InputGroup className=\"mb-3\" onChange={this.handleOnInputChange}>\n                    <FormControl\n                        placeholder=\"Enter Vegetable Name Here\"\n                        aria-label=\"plantName\"\n                        aria-describedby=\"basic-addon2\"\n                        />\n                    <InputGroup.Append>\n                        <Button variant=\"outline-success\">search</Button>\n                    </InputGroup.Append>\n                </InputGroup>\n                <Container>\n                    <Row>\n                        {/* <Col>\n                            <p className=\"font-size-14\">All</p>\n                        </Col> */}\n                        <Col>\n                            <p className=\"font-size-14\">Vegetables</p>\n                        </Col>\n                        <Col>\n                            <p className=\"font-size-14\">Easiest Plants</p>\n                        </Col>\n                        <Col>\n                            <p className=\"font-size-14\">Root Vegetables</p>\n                        </Col>\n                        <Col>\n                            <p className=\"font-size-14\">Low Maintenance</p>\n                        </Col>\n                        <Col>\n                            <p className=\"font-size-14\">Low Sunlight</p>\n                        </Col>\n                        <Col>\n                            <p className=\"font-size-14\">Low Maintainence</p>\n                        </Col>\n                    </Row>\n                </Container>\n            </div>\n        )\n    }\n}\n","import React, {Component} from 'react';\nimport {InputGroup, FormControl} from 'react-bootstrap';\nimport {ResultGroup} from './ResultGroup';\nimport {SearchBar} from './SearchBar';\n\nexport class Search extends React.Component {\n    render() {\n        return (\n            <div className=\"search\">\n                <SearchBar/>\n                <ResultGroup plants={this.props.stuff} />\n            </div>\n        )\n    }\n}","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst SignForm = ({ setField, submitForm, values, fields }) => {\n    return <>\n        <form onSubmit={submitForm}>\n            {fields.map(d => {\n                const { key, name } = d;\n                return <div key={key}>\n                    <span>{name}: </span>\n                    <input\n                        value={values[key]}\n                        name={key}\n                        onChange={setField}\n                        type={key === \"password\" || key === \"passwordConf\" ? \"password\" : ''}\n                    />\n                </div>\n            })}\n            <input type=\"submit\" value=\"Submit\" />\n        </form>\n    </>\n}\n\nSignForm.propTypes = {\n    setField: PropTypes.func.isRequired,\n    submitForm: PropTypes.func.isRequired,\n    values: PropTypes.shape({\n        email: PropTypes.string.isRequired,\n        password: PropTypes.string.isRequired,\n        passwordConf: PropTypes.string,\n        firstName: PropTypes.string,\n        lastName: PropTypes.string\n    }),\n    fields: PropTypes.arrayOf(PropTypes.shape({\n        key: PropTypes.string,\n        name: PropTypes.string\n    }))\n}\n\nexport default SignForm;","export default {\n    base: \"https://verdancy.capstone.ischool.uw.edu\",\n    testbase: \"https://localhost:3000\",\n    handlers: {\n        users: \"/v1/users\",\n        myuser: \"/v1/users/me\",\n        sessions: \"/v1/sessions\",\n        sessionsMine: \"/v1/sessions/mine\",\n        resetPasscode: \"/v1/resetcodes\",\n        passwords: \"/v1/passwords/\"\n    }\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Styles/Errors.css';\n\nconst Errors = ({ error, setError }) => {\n    switch (error) {\n        case \"\":\n            return <></>\n        default:\n            return <div className=\"error\">\n                <span className=\"error-hide\" onClick={() => setError(\"\")}>x</span>\n                Error: {error}\n            </div>\n    }\n}\n\nErrors.propTypes = {\n    error: PropTypes.string.isRequired,\n    setError: PropTypes.func\n}\n\nexport default Errors;","export default {\n    signIn: \"SIGNIN\",\n    signUp: \"SIGNUP\",\n    signedInMain: \"SIGNEDIN_MAIN\",\n    signedInUpdateName: \"SIGNEDIN_UPDATENAME\",\n    forgotPassword: \"FORGOT_PASSWORD\"\n}","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport SignForm from '../SignForm/SignForm';\nimport api from '../../../../Constants/APIEndpoints/APIEndpoints';\nimport Errors from '../../../Errors/Errors';\nimport PageTypes from '../../../../Constants/PageTypes/PageTypes';\nimport {Container, Row, Col} from 'react-bootstrap';\n\n/**\n * @class\n * @classdesc SignUp handles the sign up component\n */\nclass SignUp extends Component {\n    static propTypes = {\n        setPage: PropTypes.func,\n        setAuthToken: PropTypes.func\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            email: \"\",\n            firstName: \"\",\n            lastName: \"\",\n            password: \"\",\n            passwordConf: \"\",\n            error: \"\"\n        };\n\n        this.fields = [\n            {\n                name: \"Email\",\n                key: \"email\"\n            },\n            {\n                name: \"Password\",\n                key: \"password\"\n            },\n            {\n                name: \"Password Confirmation\",\n                key: \"passwordConf\"\n            },\n            {\n                name: \"First name\",\n                key: \"firstName\"\n            },\n            {\n                name: \"Last name\",\n                key: \"lastName\"\n            }\n        ];\n    }\n\n    /**\n     * @description setField will set the field for the provided argument\n     */\n    setField = (e) => {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    /**\n     * @description setError sets the error message\n     */\n    setError = (error) => {\n        this.setState({ error })\n    }\n\n    /**\n     * @description submitForm handles the form submission\n     */\n    submitForm = async (e) => {\n        e.preventDefault();\n        const { email,\n            password,\n            passwordConf,\n            firstName,\n            lastName\n        } = this.state;\n        const sendData = {\n            email,\n            password,\n            passwordConf,\n            firstName,\n            lastName\n        };\n        const response = await fetch(api.base + api.handlers.users, {\n            method: \"POST\",\n            body: JSON.stringify(sendData),\n            headers: new Headers({\n                \"Content-Type\": \"application/json\"\n            })\n        });\n        if (response.status >= 300) {\n            const error = await response.text();\n            this.setError(error);\n            return;\n        }\n        const authToken = response.headers.get(\"Authorization\")\n        localStorage.setItem(\"Authorization\", authToken);\n        this.setError(\"\");\n        this.props.setAuthToken(authToken);\n        const user = await response.json();\n        this.props.setUser(user);\n    }\n\n    render() {\n        const values = this.state;\n        const { error } = this.state;\n        return <>\n            <Errors error={error} setError={this.setError} />\n            <Container>\n                <Row>\n                    <Col>\n                        <SignForm\n                            setField={this.setField}\n                            submitForm={this.submitForm}\n                            values={values}\n                            fields={this.fields} />\n                    </Col>\n                    <Col>\n                        <Container>\n                            <img src=\"https://images.unsplash.com/photo-1518531933037-91b2f5f229cc?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=564&q=80\"\n                                alt=\"dark green leaves\" />\n                            <div className=\"centered-text\">\n                                <h4>welcome to</h4>\n                                <h3>verdancy</h3>\n                                <p>get ready to go green with us!</p>\n                            </div>\n                        </Container>\n                    </Col>\n                </Row>\n            </Container>\n            {/* <button onClick={(e) => this.props.setPage(e, PageTypes.signIn)}>Sign in instead</button> */}\n        </>\n    }\n}\n\nexport default SignUp;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport SignForm from '../SignForm/SignForm';\nimport api from '../../../../Constants/APIEndpoints/APIEndpoints';\nimport Errors from '../../../Errors/Errors';\nimport PageTypes from '../../../../Constants/PageTypes/PageTypes';\nimport {Container, Row, Col} from 'react-bootstrap';\n/**\n * @class\n * @classdesc SignIn handles the sign in component\n */\nclass SignIn extends Component {\n    static propTypes = {\n        setPage: PropTypes.func,\n        setAuthToken: PropTypes.func\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            email: \"\",\n            password: \"\",\n            error: \"\"\n        };\n\n        this.fields = [\n            {\n                name: \"Email\",\n                key: \"email\"\n            },\n            {\n                name: \"Password\",\n                key: \"password\"\n            }];\n    }\n\n    /**\n     * @description setField will set the field for the provided argument\n     */\n    setField = (e) => {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    /**\n     * @description setError sets the error message\n     */\n    setError = (error) => {\n        this.setState({ error })\n    }\n\n    /**\n     * @description submitForm handles the form submission\n     */\n    submitForm = async (e) => {\n        e.preventDefault();\n        const { email, password } = this.state;\n        const sendData = { email, password };\n        const response = await fetch(api.base + api.handlers.sessions, {\n            method: \"POST\",\n            body: JSON.stringify(sendData),\n            headers: new Headers({\n                \"Content-Type\": \"application/json\"\n            })\n        });\n        if (response.status >= 300) {\n            const error = await response.text();\n            this.setError(error);\n            return;\n        }\n        const authToken = response.headers.get(\"Authorization\")\n        localStorage.setItem(\"Authorization\", authToken);\n        this.setError(\"\");\n        this.props.setAuthToken(authToken);\n        const user = await response.json();\n        this.props.setUser(user);\n    }\n\n    render() {\n        const values = this.state;\n        const { error } = this.state;\n        return <>\n            <Errors error={error} setError={this.setError} />\n            <Container>\n                <Row>\n                    <Col>\n                        <SignForm\n                            setField={this.setField}\n                            submitForm={this.submitForm}\n                            values={values}\n                            fields={this.fields} />\n                    </Col>\n                    <Col>\n                        <Container>\n                            <img src=\"https://images.unsplash.com/photo-1518531933037-91b2f5f229cc?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=564&q=80\"\n                                alt=\"dark green leaves\" />\n                            <div className=\"centered-text\">\n                                <h4>welcome to</h4>\n                                <h3>verdancy</h3>\n                                <p>get ready to go green with us!</p>\n                            </div>\n                        </Container>\n                    </Col>\n                </Row>\n            </Container>\n            {/* <button onClick={(e) => this.props.setPage(e, PageTypes.signUp)}>Sign up instead</button>\n            <button onClick={(e) => this.props.setPage(e, PageTypes.forgotPassword)}>Forgot password</button> */}\n        </>\n    }\n}\n\nexport default SignIn;","import React, {Component} from 'react';\n\nexport class PleaseSignIn extends React.Component {\n    render() {\n        return(\n            <div>\n                <h2>please sign in!</h2>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport Errors from '../../../Errors/Errors';\nimport api from '../../../../Constants/APIEndpoints/APIEndpoints';\nimport PageTypes from '../../../../Constants/PageTypes/PageTypes';\n\nclass ForgotPassword extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: \"\",\n            password: \"\",\n            passwordConf: \"\",\n            resetCode: \"\",\n            resetCodeSent: false,\n            error: \"\"\n        }\n    }\n\n    sendResetCode = async (e) => {\n        e.preventDefault();\n        const { email } = this.state;\n        const sendData = { email };\n        const response = await fetch(api.base + api.handlers.resetPasscode, {\n            method: \"POST\",\n            body: JSON.stringify(sendData),\n            headers: new Headers({\n                \"Content-Type\": \"application/json\"\n            })\n        });\n        if (response.status >= 300) {\n            const error = await response.text();\n            this.setError(error);\n            return;\n        }\n        this.setError(\"\");\n        alert(\"A reset code has been sent to your email\");\n        this.setState({ resetCodeSent: true });\n    }\n\n    updatePassword = async (e) => {\n        e.preventDefault();\n        const { email, password, passwordConf, resetCode } = this.state;\n        const sendData = { password, passwordConf, resetCode };\n        const response = await fetch(api.base + api.handlers.passwords + email, {\n            method: \"PUT\",\n            body: JSON.stringify(sendData),\n            headers: new Headers({\n                \"Content-Type\": \"application/json\"\n            })\n        });\n        if (response.status >= 300) {\n            const error = await response.text();\n            this.setError(error);\n            return;\n        }\n        this.setError(\"\");\n        alert(\"Your password has been updated\");\n    }\n\n    setValue = (e) => {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    setError = (error) => {\n        this.setState({ error });\n    }\n\n    render() {\n        const { email, password, passwordConf, resetCode, resetCodeSent, error } = this.state;\n        return <>\n            <Errors error={error} setError={this.setError} />\n            {resetCodeSent ?\n                <>\n                    <form onSubmit={(e) => this.updatePassword(e)}>\n                        <div>\n                            <span>Password: </span>\n                            <input name={\"password\"} type={\"password\"} onChange={this.setValue} value={password} />\n                        </div>\n                        <div>\n                            <span>Password Confirmation: </span>\n                            <input name={\"passwordConf\"} type={\"password\"} onChange={this.setValue} value={passwordConf} />\n                        </div>\n                        <div>\n                            <span>Reset Code: </span>\n                            <input name={\"resetCode\"} onChange={this.setValue} value={resetCode} />\n                        </div>\n                        <input type=\"submit\" value=\"Update my password\" />\n                    </form>\n                </>\n                :\n                <>\n                    <form onSubmit={(e) => this.sendResetCode(e)}>\n                        <div>\n                            <span>Email: </span>\n                            <input name={\"email\"} onChange={this.setValue} value={email} />\n                        </div>\n                        <input type=\"submit\" value=\"Send me a reset code\" />\n                    </form>\n                </>}\n            <button onClick={(e) => this.props.setPage(e, PageTypes.signIn)}>Back to sign in</button>\n\n\n        </>\n\n    }\n\n\n\n}\n\nexport default ForgotPassword;","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport api from '../../../../Constants/APIEndpoints/APIEndpoints';\nimport Errors from '../../../Errors/Errors';\n\nconst SignOutButton = ({ setAuthToken, setUser }) => {\n    const [error, setError] = useState(\"\");\n\n    return <><button onClick={async (e) => {\n        e.preventDefault();\n        const response = await fetch(api.base + api.handlers.sessionsMine, {\n            method: \"DELETE\",\n            headers: new Headers({\n                \"Authorization\": localStorage.getItem(\"Authorization\")\n            })\n        });\n        if (response.status >= 300) {\n            const error = await response.text();\n            setError(error);\n            return;\n        }\n        localStorage.removeItem(\"Authorization\");\n        setError(\"\");\n        setAuthToken(\"\");\n        setUser(null);\n    }}>Sign out</button>\n        {error &&\n            <div>\n                <Errors error={error} setError={setError} />\n            </div>\n        }\n    </>\n}\n\nSignOutButton.propTypes = {\n    setAuthToken: PropTypes.func.isRequired,\n    setUser: PropTypes.func.isRequired\n}\n\nexport default SignOutButton;","import logo from './logo.svg';\nimport React, {Component, useState} from 'react';\nimport {\n    HashRouter as Router,\n    Switch,\n    Route,\n    Link\n} from 'react-router-dom';\nimport {Navbar, Nav, Button} from 'react-bootstrap';\nimport {Home} from './Components/HomePage/Home';\nimport {Advice} from './Components/Advice/Advice';\nimport {Emissions} from './Components/Emissions/Emissions';\nimport {Garden} from './Components/Garden/Garden';\nimport {Search} from './Components/Search/Search';\nimport SignUp from './Components/Auth/Components/SignUp/SignUp';\nimport SignIn from './Components/Auth/Components/SignIn/SignIn';\nimport Auth from './Components/Auth/Auth';\nimport {SinglePlant} from './Components/SinglePlant/SinglePlant';\nimport './App.css';\nimport './index.css';\nimport PageTypes from './Constants/PageTypes/PageTypes';\nimport api from './Constants/APIEndpoints/APIEndpoints';\nimport {PleaseSignIn} from './Components/Auth/Components/PleaseSIgnIn';\nimport SignOutButton from './Components/Main/Components/SignOutButton/SignOutButton';\n// s\n\nclass App extends Component {\n// function App() {\n    constructor() {\n        super();\n        this.state = {\n            page: localStorage.getItem(\"Authorization\") ? PageTypes.signedInMain : PageTypes.signIn,\n            authToken: localStorage.getItem(\"Authorization\") || null,\n            user: null,\n            singlePlants: [],\n            plants: [],\n            userPlants: []\n        }\n\n        this.getCurrentUser()\n    }\n\n\n    /**\n     * @description Gets the users\n     */\n    getCurrentUser = async () => {\n        if (!this.state.authToken) {\n            return;\n        }\n        const response = await fetch(api.base + api.handlers.myuser, {\n            headers: new Headers({\n                \"Authorization\": this.state.authToken\n            })\n        });\n        if (response.status >= 300) {\n            alert(\"Unable to verify login. Logging out...\");\n            localStorage.setItem(\"Authorization\", \"\");\n            this.setAuthToken(\"\");\n            this.setUser(null)\n            return;\n        }\n        const user = await response.json()\n        this.setUser(user);\n\n    }\n\n    /**\n     * @description sets the page type to sign in\n     */\n    setPageToSignIn = (e) => {\n        e.preventDefault();\n        this.setState({ page: PageTypes.signIn });\n    }\n\n    /**\n     * @description sets the page type to sign up\n     */\n    setPageToSignUp = (e) => {\n        e.preventDefault();\n        this.setState({ page: PageTypes.signUp });\n    }\n\n    setPage = (e, page) => {\n        e.preventDefault();\n        this.setState({ page });\n    }\n\n    /**\n     * @description sets auth token\n     */\n    setAuthToken = (authToken) => {\n        this.setState({ authToken, page: authToken === \"\" ? PageTypes.signIn : PageTypes.signedInMain });\n    }\n\n    /**\n     * @description sets the user\n     */\n    setUser = (user) => {\n        this.setState({ user });\n    }\n\n    componentDidMount() {\n        // getUserPlants = async () => {\n        // this.getUserPlants();\n        // setInterval(this.getData, 5000);\n        const response = fetch(\"https://verdancy.capstone.ischool.uw.edu/v1/plants\")\n            .then(res => res.json())\n            .then((result) => {\n                console.log(result);\n                this.setState({plants: result});\n                result.map(cur => (\n                    this.state.singlePlants.push(\n                        <Route exact path={`/plant/${cur.PlantID}`}>\n                            <SinglePlant id={cur.PlantID}/>\n                        </Route>\n                    )\n                ));\n            });\n        // console.log(this.state.authToken)\n        // if (this.state.authToken) {\n        //     fetch(\"https://verdancy.capstone.ischool.uw.edu/v1/UserPlants/\", {\n        //         method: 'GET',\n        //         headers: new Headers({\n        //             'Authorization': this.state.authToken\n        //         })\n        //     }).then(res => res.json())\n        //         .then((result) => {\n        //             // console.log(result);\n        //             // this.setState({userPlants: result});\n        //             this.state.userPlants = result;\n        //             // console.log(this.state.userPlants);\n        //         });\n        // }\n        // console.log(this.state.userPlants);\n    \n    }\n\n    \n\n  render() {\n    console.log(this.state.id);\n    const { page, user } = this.state;\n      return (\n        <Router basename={process.env.PUBLIC_URL} >\n            <Navbar className=\"green-background\">\n                <div className=\"container\" id=\"nav-bar\">\n                    <Link className=\"link\" to=\"/\">verdancy</Link>\n                    <div id=\"nav-links\">\n                        <Link className=\"link\" to=\"/advice\">advice</Link>\n                        <Link className=\"link\" to=\"/search\">search</Link>\n                        <Link className=\"link\" to=\"/emissions\">my emissions</Link>\n                        <Link className=\"link\" to=\"/garden\">my garden</Link>\n                        <Button className=\"darkgreen-button\">\n                            <Link to=\"/signup\" className=\"nav-button\">Get Started</Link>\n                        </Button>\n                        <Button className=\"cream-button\">\n                            <Link to=\"/signin\" className=\"nav-button\">Sign In</Link>\n                        </Button>\n                    </div>\n                </div>\n            </Navbar>\n            <Switch>\n                <Route exact path=\"/\" component={Home}></Route>\n                <Route exact path=\"/advice\" component={Advice}></Route>\n                <Route exact path=\"/emissions\">\n                {user ? <Emissions />: \n                        <PleaseSignIn />\n                    }\n                </Route>\n                <Route exact path=\"/garden\">\n                    {user ? <Garden plants={this.state.userPlants} /> : \n                        <PleaseSignIn />\n                    }\n                </Route>\n                <Route exact path=\"/search\">\n                    <Search stuff={this.state.plants} />\n                </Route>\n                <Route exact path=\"/signin\">\n                    {user ? <SignOutButton setUser={this.setUser} setAuthToken={this.setAuthToken} />\n                        :\n                        <SignIn setPage={this.setPage} setAuthToken={this.setAuthToken} setUser={this.setUser} />\n                    \n                    }\n                </Route>\n                <Route exact path=\"/signup\">\n                    {user ? <SignOutButton setUser={this.setUser} setAuthToken={this.setAuthToken} />\n                        :\n                        <SignUp setPage={this.setPage} setAuthToken={this.setAuthToken} setUser={this.setUser} />\n                    }\n                </Route>\n                {/* this is terrible code im sorry but i cant think of anything else */}\n                {this.state.singlePlants}\n    \n            </Switch>\n\n        </Router>\n\n    );\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n"],"sourceRoot":""}