{"ast":null,"code":"var _jsxFileName = \"/Users/annaqzhou/go/src/plantastic/client/src/Components/Emissions/Emissions.js\";\nimport React, { Component } from 'react';\nimport { EmissionsTitle } from './EmissionsTitle';\nimport { Conversions } from './Conversions';\nimport { Breakdown } from './Breakdown';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Emissions extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      totalEm: [],\n      auth: localStorage.getItem(\"Authorization\")\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://verdancy.capstone.ischool.uw.edu/v1/emissions/\", {\n      method: 'GET',\n      headers: new Headers({\n        'Authorization': this.state.auth\n      })\n    }).then(res => res.json()).then(result => {\n      this.setState({\n        isLoaded: true,\n        totalEm: result\n      });\n    }, error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"body\", {\n      children: [/*#__PURE__*/_jsxDEV(EmissionsTitle, {\n        emissions: this.state.totalEm.Quantity\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Conversions, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Breakdown, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/annaqzhou/go/src/plantastic/client/src/Components/Emissions/Emissions.js"],"names":["React","Component","EmissionsTitle","Conversions","Breakdown","Emissions","constructor","props","state","error","isLoaded","totalEm","auth","localStorage","getItem","componentDidMount","fetch","method","headers","Headers","then","res","json","result","setState","render","Quantity"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,cAAR,QAA6B,kBAA7B;AACA,SAAQC,WAAR,QAA0B,eAA1B;AACA,SAAQC,SAAR,QAAwB,aAAxB;;AAEA,OAAO,MAAMC,SAAN,SAAwBL,KAAK,CAACC,SAA9B,CAAwC;AAC3CK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,IADE;AAETC,MAAAA,QAAQ,EAAE,KAFD;AAGTC,MAAAA,OAAO,EAAE,EAHA;AAITC,MAAAA,IAAI,EAAEC,YAAY,CAACC,OAAb,CAAqB,eAArB;AAJG,KAAb;AAMH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,KAAK,CAAC,wDAAD,EAA2D;AAC5DC,MAAAA,MAAM,EAAE,KADoD;AAE5DC,MAAAA,OAAO,EAAE,IAAIC,OAAJ,CAAY;AACjB,yBAAiB,KAAKX,KAAL,CAAWI;AADX,OAAZ;AAFmD,KAA3D,CAAL,CAMKQ,IANL,CAMUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EANjB,EAOKF,IAPL,CAQSG,MAAD,IAAY;AACR,WAAKC,QAAL,CAAc;AACVd,QAAAA,QAAQ,EAAE,IADA;AAEVC,QAAAA,OAAO,EAAEY;AAFC,OAAd;AAIH,KAbT,EAcSd,KAAD,IAAW;AACP,WAAKe,QAAL,CAAc;AACVd,QAAAA,QAAQ,EAAE,IADA;AAEVD,QAAAA;AAFU,OAAd;AAIH,KAnBT;AAqBH;;AAEDgB,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,8BAEE,QAAC,cAAD;AAAgB,QAAA,SAAS,EAAE,KAAKjB,KAAL,CAAWG,OAAX,CAAmBe;AAA9C;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AASH;;AA7C0C","sourcesContent":["import React, {Component} from 'react';\nimport {EmissionsTitle} from './EmissionsTitle';\nimport {Conversions} from './Conversions';\nimport {Breakdown} from './Breakdown';\n\nexport class Emissions extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            error: null,\n            isLoaded: false,\n            totalEm: [],\n            auth: localStorage.getItem(\"Authorization\")\n        }\n    }\n\n    componentDidMount() {\n        fetch(\"https://verdancy.capstone.ischool.uw.edu/v1/emissions/\", {\n            method: 'GET',\n            headers: new Headers({\n                'Authorization': this.state.auth\n            })\n        })\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    this.setState({\n                        isLoaded: true,\n                        totalEm: result\n                    });\n                },\n                (error) => {\n                    this.setState({\n                        isLoaded: true,\n                        error\n                    });\n                }\n            )\n    }\n\n    render() {\n        return (\n            <body>\n\n              <EmissionsTitle emissions={this.state.totalEm.Quantity} />\n              <Conversions />\n              <Breakdown />\n\n            </body>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}